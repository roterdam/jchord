/* =========================================================================
 * File: $Id: $CacheConfig.java,v$
 *
 * Copyright (c) 2006, Yuriy Stepovoy. All rights reserved.
 * email: stepovoy@gmail.com
 *
 * =========================================================================
 */

package net.sf.cache4j;

/**
 * CacheConfig конфигурация кеша
 * @version $Revision: 1.0 $ $Date:$
 * @author Yuriy Stepovoy. <a href="mailto:stepovoy@gmail.com">stepovoy@gmail.com</a>
 **/

public interface CacheConfig {
// ----------------------------------------------------------------------------- Константы
// ----------------------------------------------------------------------------- Атрибуты класса
// ----------------------------------------------------------------------------- Статические переменные
// ----------------------------------------------------------------------------- Конструкторы
// ----------------------------------------------------------------------------- Public методы

    /**
     * Возвращает идентификатор кеша.
     * Идентификатор должен быть уникальный для всего приложения.
     */
    public Object getCacheId();

    /**
     * Возвращает описание экземпляра кеша.
     */
    public String getCacheDesc();

    /**
     * Возвращает максимальное время жизни объекта в кеше.
     * 0 - без ограничений.
     */
    public long getTimeToLive();

    /**
     * Возвращает максимальное время бездействия объекта в кеше.
     * 0 - без ограничений.
     */
    public long getIdleTime();

    /**
     * Возвращает максимальный размер объектов в кеше (байт).
     * Если значение больше нуля то при помещении объекта вычисляется его размер
     * и проверяется размер объектов в кеше.
     * 0 - без ограничений.
     */
    public long getMaxMemorySize();

    /**
     * Возвращает максимальное количество объектов в кеше.
     * Если значение больше нуля то при помещении объекта в кеш выполняется проверка
     * на количество объектов в кеше.
     * 0 - без ограничений.
     */
    public int getMaxSize();

    /**
     * Возвращает тип кеша.
     *  <ul>
     *   <li>blocking - (по умолчанию) класс {@link net.sf.cache4j.impl.BlockingCache}</li>
     *   <li>synchronized - класс {@link net.sf.cache4j.impl.SynchronizedCache}</li>
     *   <li>nocache - класс {@link net.sf.cache4j.impl.EmptyCache}</li>
     *  </ul>
     */
    public String getType();

    /**
     * Возвращает алгоритм удаления объектов из кеша.
     * <ul>
     *   <li>lru (Least Recently Used) (по умолчанию)</li>
     *   <li>lfu (Least Frequently Used)</li>
     *   <li>fifo (First In First Out)</li>
     * </ul>
     */
    public String getAlgorithm();

    /**
     * Возвращает тип ссылки на объект содержащийся в кеше.
     * <ul>
     *   <li>strong - сильная ссылка (по умолчанию)</li>
     *   <li>soft - магкая ссылка <code>java.lang.ref.SoftReference</code></li>
     * </ul>
     */
    public String getReference();

// ----------------------------------------------------------------------------- Package scope методы
// ----------------------------------------------------------------------------- Protected методы
// ----------------------------------------------------------------------------- Private методы
// ----------------------------------------------------------------------------- Inner классы
}

/*
$Log: CacheConfig.java,v $
*/
