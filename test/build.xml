<?xml version="1.0" encoding="UTF-8"?>
<!--
  Test runner for Chord.
-->
<project name="chord-tester" default="help" basedir=".">

	<property name="test.dirs" value="philo,sor,elevator,tsp,hedc"/>

	<target name="help">
		<echo>
		test-all Test all Chord components
		         Optional properties:
		         - test.dirs       (comma-separated list of directories under test/ to be included; default="${test.dirs}")
		test     Test only chosen Chord components
		         Optional properties:
		         - test.dirs       (comma-separated list of directories under test/ to be included; default="${test.dirs}")
		         - test.main       (test basic program domains and relations; default=false)
		         - test.cia        (test 0-CFA may alias and call graph analyses; default=false)
		         - test.csa.0cfa   (test context-sensitive adaptor for 0-CFA may alias and call graph analyses; default=false)
		         - test.csa.kobj   (test k-object-sensitive may alias and call graph analyses; default=false)
		         - test.csa.kcfa   (test k-CFA may alias and call graph analyses; default=false)
		         - test.csa.hybrid (test hybrid context-sensitive may alias and call graph analyses; default=false)
		</echo>
	</target>

	<property name="maindir" location="../main"/>
	<property name="chord.main.doms" value="M,F,V,P,I,E,H,L,R,Z"/>
	
	<property name="chord.main.rels" value="aryElemE,cha,clinitM,EF,EV,HT,IinvkArg0,IinvkArg,IinvkRet,initM,instF,instFldE,instI,instM,LE,LI,LL,ME,MgetInstFldInst,MgetStatFldInst,MH,MI,ML,MmethArg,MmethRet,MobjValAsgnInst,MobjVarAsgnInst,MPhead,MP,MPtail,MputInstFldInst,MputStatFldInst,MV,PE,PgetInstFldInst,PgetStatFldInst,PI,PL,PobjValAsgnInst,PobjVarAsgnInst,PP,PputInstFldInst,PputStatFldInst,privateM,specIM,statF,statFldE,statIM,statM,syncLM,syncLV,syncM,thisMV,virtIM,VT,writeE"/>
	<property name="chord.main.doms_and_rels" value="${chord.main.doms},${chord.main.rels}"/>
	<property name="chord.cia.rels" value="FH,VH,HFH,IM,MM,rootM,reachableM,thrOblAbbrRootM,thrOblAbbrReachableM,thrOblAbbrIM,thrOblAbbrMM,thrSenAbbrRootM,thrSenAbbrReachableM,thrSenAbbrIM,thrSenAbbrMM"/>
	<property name="chord.csa.rels" value="FC,CVC,CFC,CICM,CMCM,rootCM,reachableCM,thrOblAbbrRootCM,thrOblAbbrReachableCM,thrOblAbbrCICM,thrOblAbbrCMCM,thrSenAbbrRootCM,thrSenAbbrReachableCM,thrSenAbbrCICM,thrSenAbbrCMCM,epsilonV,epsilonM,kcfaSenM,kobjSenM,ctxtCpyM,CC,CH,CI"/>

	<taskdef resource="net/sf/antcontrib/antlib.xml" classpath="${maindir}/tools/ant-contrib.jar"/>

	<!--
		Test all Chord components.
	-->
	<target name="test-all">
		<property name="test.main" value="true"/>
		<property name="test.cia" value="true"/>
		<property name="test.csa.0cfa" value="true"/>
		<property name="test.csa.kobj" value="true"/>
		<property name="test.csa.kcfa" value="true"/>
		<property name="test.csa.hybrid" value="true"/>
		<antcall target="test"/>
	</target>

	<!--
		Test only chosen Chord components.
	-->
	<target name="test">
		<for param="testdir">
			<dirset dir="programs" includes="${test.dirs}"/>
			<sequential>
				<echo message="===== Benchmark: @{testdir}"/>
				<ant dir="@{testdir}" target="clean"/>
				<ant dir="@{testdir}" target="compile"/>
				<ant dir="${maindir}" target="run">
					<property name="chord.work.dir" value="@{testdir}"/>
					<property name="chord.build.scope" value="true"/>
					<property name="chord.scope.exclude" value="java.,javax.,sun.,joeq.,jwutil.,com.sun.,com.ibm.,org.apache.harmony."/>
					</ant>
				<antcall target="sort-and-diff">
					<param name="arg1" location="@{testdir}/chord_output/classes.txt"/>
					<param name="arg2" location="@{testdir}/correct_output/classes.txt"/>
				</antcall> 
				<antcall target="sort-and-diff">
					<param name="arg1" location="@{testdir}/chord_output/methods.txt"/>
					<param name="arg2" location="@{testdir}/correct_output/methods.txt"/>
				</antcall> 
				<if>
					<isset property="test.main"/>
					<then>
						<antcall target="test-main">
							<param name="testdir" value="@{testdir}"/>
						</antcall>
					</then>
				</if>
				<if>
					<isset property="test.cia"/>
					<then>
						<antcall target="test-cia">
							<param name="testdir" value="@{testdir}"/>
						</antcall>
					</then>
				</if>
				<if>
					<isset property="test.csa.0cfa"/>
					<then>
						<antcall target="test-csa-0cfa">
							<param name="testdir" value="@{testdir}"/>
						</antcall>
					</then>
				</if>
				<if>
					<isset property="test.csa.kobj"/>
					<then>
						<antcall target="test-csa-kobj">
							<param name="testdir" value="@{testdir}"/>
						</antcall>
					</then>
				</if>
				<if>
					<isset property="test.csa.kcfa"/>
					<then>
						<antcall target="test-csa-kcfa">
							<param name="testdir" value="@{testdir}"/>
						</antcall>
					</then>
				</if>
				<if>
					<isset property="test.csa.hybrid"/>
					<then>
						<antcall target="test-csa-hybrid">
							<param name="testdir" value="@{testdir}"/>
						</antcall>
					</then>
				</if>
			</sequential>
		</for>
	</target>

	<!--
		INTERNAL TARGETS
	-->

	<!--
		Test basic program domains and relations.
	-->
	<target name="test-main">
		<fail unless="testdir"/>
		<ant dir="${maindir}" target="run">
			<property name="chord.work.dir" value="${testdir}"/>
			<property name="chord.reuse.scope" value="true"/>
			<property name="chord.run.analyses" value="${chord.main.doms_and_rels}"/>
			<property name="chord.print.rels" value="${chord.main.rels}"/>
		</ant>
		<antcall target="compare-doms">
			<param name="testdir" value="${testdir}"/>
			<param name="correctdir" value="${testdir}/correct_output/main"/>
			<param name="domnames" value="${chord.main.doms}"/>
		</antcall>
		<antcall target="compare-rels">
			<param name="testdir" value="${testdir}"/>
			<param name="correctdir" value="${testdir}/correct_output/main"/>
			<param name="relnames" value="${chord.main.rels}"/>
		</antcall>
	</target>

	<!--
		Test 0-CFA may-alias and call-graph analyses.
	-->
	<target name="test-cia">
		<fail unless="testdir"/>
		<ant dir="${maindir}" target="run">
			<property name="chord.work.dir" value="${testdir}"/>
			<property name="chord.reuse.scope" value="true"/>
			<property name="chord.run.analyses" value="cipa-0cfa-dlog,thrOblAbbrCICG-dlog,thrSenAbbrCICG-dlog"/>
			<property name="chord.print.rels" value="${chord.cia.rels}"/>
		</ant>
		<antcall target="compare-rels">
			<param name="testdir" value="${testdir}"/>
			<param name="correctdir" value="${testdir}/correct_output/cia"/>
			<param name="relnames" value="${chord.cia.rels}"/>
		</antcall>
	</target>

	<!--
		Test context-sensitive adaptor for 0-CFA may-alias and call-graph analyses.
	-->
	<target name="test-csa-0cfa">
		<fail unless="testdir"/>
		<ant dir="${maindir}" target="run">
			<property name="chord.work.dir" value="${testdir}"/>
			<property name="chord.reuse.scope" value="true"/>
			<property name="chord.run.analyses" value="cspa-0cfa-dlog,thrOblAbbrCSCG-dlog,thrSenAbbrCSCG-dlog"/>
			<property name="chord.print.rels" value="${chord.csa.rels}"/>
		</ant>
		<antcall target="compare-rels">
			<param name="testdir" value="${testdir}"/>
			<param name="correctdir" value="${testdir}/correct_output/csa_0cfa"/>
			<param name="relnames" value="${chord.csa.rels}"/>
		</antcall>
	</target>

	<!--
		Test k-object-sensitive may-alias and call-graph analyses.
	-->
	<target name="test-csa-kobj">
		<ant dir="${maindir}" target="run">
			<property name="chord.work.dir" value="${testdir}"/>
			<property name="chord.reuse.scope" value="true"/>
			<property name="chord.inst.ctxt.kind" value="co"/>
			<property name="chord.kobj.k" value="1"/>
			<property name="chord.run.analyses" value="cspa-kobj-dlog,thrOblAbbrCSCG-dlog,thrSenAbbrCSCG-dlog"/>
			<property name="chord.print.rels" value="${chord.csa.rels}"/>
		</ant>
		<antcall target="compare-rels">
			<param name="testdir" value="${testdir}"/>
			<param name="correctdir" value="${testdir}/correct_output/csa_kobj"/>
			<param name="relnames" value="${chord.csa.rels}"/>
		</antcall>
	</target>

	<!--
		Test k-CFA may-alias and call-graph analyses.
	-->
	<target name="test-csa-kcfa">
	<ant dir="${maindir}" target="run">
	<property name="chord.work.dir" value="${testdir}"/>
	<property name="chord.reuse.scope" value="true"/>
	<property name="chord.inst.ctxt.kind" value="cs"/>
	<property name="chord.kcfa.k" value="1"/>
	<property name="chord.run.analyses" value="cspa-kcfa-dlog,thrOblAbbrCSCG-dlog,thrSenAbbrCSCG-dlog"/>
	<property name="chord.print.rels" value="${chord.csa.rels}"/>
	</ant>
	<antcall target="compare-rels">
	<param name="testdir" value="${testdir}"/>
	<param name="correctdir" value="${testdir}/correct_output/csa_kcfa"/>
	<param name="relnames" value="${chord.csa.rels}"/>
	</antcall>
	</target>

	<!--
		Test hybrid context-sensitive may-alias and call-graph analyses.
	-->
	<target name="test-csa-hybrid">
		<fail unless="testdir"/>
		<ant dir="${maindir}" target="run">
			<property name="chord.work.dir" value="${testdir}"/>
			<property name="chord.reuse.scope" value="true"/>
			<property name="chord.inst.ctxt.kind" value="co"/>
			<property name="chord.stat.ctxt.kind" value="cs"/>
			<property name="chord.kobj.k" value="1"/>
			<property name="chord.kcfa.k" value="1"/>
			<property name="chord.run.analyses" value="cspa-hybrid-dlog,thrOblAbbrCSCG-dlog,thrSenAbbrCSCG-dlog"/>
			<property name="chord.print.rels" value="${chord.csa.rels}"/>
		</ant>
		<antcall target="compare-rels">
			<param name="testdir" value="${testdir}"/>
			<param name="correctdir" value="${testdir}/correct_output/csa_hybrid"/>
			<param name="relnames" value="${chord.csa.rels}"/>
		</antcall>
	</target>

	<!--
	params: testdir, correctdir, domnames
	-->
	<target name="compare-doms">
	<for param="domname" list="${domnames}">
	<sequential>
	<antcall target="sort-and-diff">
	<param name="arg1" location="${testdir}/chord_output/bddbddb/@{domname}.map"/>
	<param name="arg2" location="${correctdir}/@{domname}.map"/>
	</antcall>
	</sequential>
	</for>
	</target>

	<!--
	params: testdir, correctdir, relnames
	-->
	<target name="compare-rels">
		<for param="relname" list="${relnames}">
			<sequential>
				<antcall target="sort-and-diff">
					<param name="arg1" location="${testdir}/chord_output/@{relname}.txt"/>
					<param name="arg2" location="${correctdir}/@{relname}.txt"/>
				</antcall>
			</sequential>
		</for>
	</target>

	<!--
		params: arg1, arg2
	-->
	<target name="sort-and-diff">
		<exec executable="sort">
			<arg line="${arg1} -o ${arg1}"/>
		</exec>
		<exec executable="sort">
			<arg line="${arg2} -o ${arg2}"/>
		</exec>
		<exec executable="diff" resultproperty="retval">
			<arg line="--strip-trailing-cr ${arg1} ${arg2}"/> 
		</exec>
		<if>
			<not><equals arg1="${retval}" arg2="0"/></not>
			<then>
				<echo message="ERROR: diff ${arg1} ${arg2} failed"/>
			</then>
		</if>
	</target>
</project>

