# Copyright (c) 2008-2010, Intel Corporation.
# Copyright (c) 2006-2007, The Trustees of Stanford University.
# All rights reserved.
# Licensed under the terms of the New BSD License.

# Author: Mayur Naik (mhn@cs.stanford.edu)
# name=datarace-dlog

.include "A.dom"
.include "F.dom"
.include "C.dom"
.include "E.dom"

.bddvarorder F0_E0_E1_A0xA1_C0xC1xC2

###
# Relations
###

rdOrWrTCEF(t:A0,c:C0,e:E0,f:F0) input
onlyWrTCEF(t:A0,c:C0,e:E0,f:F0) input
startingRaceHext(t1:A0,c1:C0,e1:E0,t2:A1,c2:C1,e2:E1)

###

statF(f:F0) input
EF(e:E0,f:F0) input
statE(e:E0)
CEC(c:C0,e:E0,o:C1) input
escapingRaceHext(t1:A0,c1:C0,e1:E0,t2:A1,c2:C1,e2:E1)

###

mhe(c:C0,e:E0,t1:A0,t2:A1) input
parallelRaceHext(t1:A0,c1:C0,e1:E0,t2:A1,c2:C1,e2:E1)

###

guardedE(t:A0,c:C0,e:E0,o:C1) input
unlikelyRaceHext(t1:A0,c1:C0,e1:E0,t2:A1,c2:C1,e2:E1)
datarace(t1:A0,c1:C0,e1:E0,t2:A1,c2:C1,e2:E1) output

###
# Constraints
###

startingRaceHext(t1,c1,e1,t2,c2,e2) :- onlyWrTCEF(t1,c1,e1,f), rdOrWrTCEF(t2,c2,e2,f), e1 < e2.
startingRaceHext(t1,c1,e1,t2,c2,e2) :- rdOrWrTCEF(t1,c1,e1,f), onlyWrTCEF(t2,c2,e2,f), e1 < e2.
startingRaceHext(t1,c1,e1,t2,c2,e2) :- onlyWrTCEF(t1,c1,e1,f), onlyWrTCEF(t2,c2,e2,f), \
	e1 = e2, c1 < c2.
startingRaceHext(t1,c1,e1,t2,c2,e2) :- onlyWrTCEF(t1,c1,e1,f), onlyWrTCEF(t2,c2,e2,f), \
	e1 = e2, c1 = c2, t1 <= t2.

###

statE(e) :- EF(e,f), statF(f).

escapingRaceHext(t1,c1,e1,t2,c2,e2) :- startingRaceHext(t1,c1,e1,t2,c2,e2), \
	CEC(c1,e1,o), CEC(c2,e2,o).
escapingRaceHext(t1,c1,e1,t2,c2,e2) :- startingRaceHext(t1,c1,e1,t2,c2,e2), \
	statE(e1), statE(e2).

###

parallelRaceHext(t1,c1,e1,t2,c2,e2) :- escapingRaceHext(t1,c1,e1,t2,c2,e2), \
	mhe(c1,e1,t1,t2), mhe(c2,e2,t2,t1).

###

unlikelyRaceHext(t1,c1,e1,t2,c2,e2) :- parallelRaceHext(t1,c1,e1,t2,c2,e2), \
	guardedE(t1,c1,e1,o), guardedE(t2,c2,e2,o).

datarace(t1,c1,e1,t2,c2,e2) :- parallelRaceHext(t1,c1,e1,t2,c2,e2), \
	!unlikelyRaceHext(t1,c1,e1,t2,c2,e2).

