# Copyright (c) 2008-2010, Intel Corporation.
# Copyright (c) 2006-2007, The Trustees of Stanford University.
# All rights reserved.
# Licensed under the terms of the New BSD License.

# Author: Mayur Naik (mhn@cs.stanford.edu)
# name=kcfa-init-trunk-dlog

.include "I.dom"
.include "M.dom"
.include "K.dom"
.include "C.dom"
.include "H.dom"

.bddvarorder I0xI1xI2xI3_M0xM1_C0xC1xC2xC3xC4_K0xH0xH1xH2xH3

###
# Relations
###

initCIC(c:C, i:I, c:C) input
initCHC(c:C, h:H, c:C) input
truncCKC(c:C, k:K, c:C) input 	# K is the domain of integers
IK(i:I, k:K) input 				#the parametric relation
HK(h:H, k:K) input
IM(i:I, m:M) input
MI(m:M, i:I) input
MH(m:M, h:H) input
roots(m:M) input

CM_1(c:C, m:M)
CIC_1(c:C, i:I, c:C)
CIC_2(c:C, i:I, c:C)
CIC_3(c:C, i:I, c:C)

CHC_1(c:C, h:H, c:C)
CHC_2(c:C, h:H, c:C)
CHC_3(c:C, h:H, c:C)

CM(c:C, m:M) output
CIC(c:C, i:I, c:C) output
CHC(c:C, h:H, c:C) output

###
# Constraints
###

#initialize CM for root methods with emptycontext
CM_1(0,m) :- roots(m).
CIC_1(c1,i,c3) :- MI(m,i), CM_1(c1,m), IK(i,k), initCIC(c1,i,c2), truncCKC(c2, k, c3).
CM_1(c,m) :- CIC_1(_,i,c), IM(i,m).
CIC_2(c1,i,c2) :- CIC_1(c1,i,c2), initCIC(c1,i,c2).
CIC_3(c1,i,c3) :- !CIC_2(c1,i,c3), CIC_1(c1,i,c3).

CM(0,m) :- roots(m).
CIC(c1,i,c3) :- CIC_2(c1,i,c3).
CIC(c1,i,c3) :- MI(m,i), CM(c1,m), IK(i,k), initCIC(c1,i,c2), truncCKC(c2,k,c3), CIC_3(c1,i,c3).
CM(c,m) :- CIC(_,i,c), IM(i,m).

CHC_1(c1,h,c3) :- MH(m,h), CM(c1,m), HK(h,k), initCHC(c1,h,c2), truncCKC(c2,k,c3).
CHC_2(c1,h,c2) :- CHC_1(c1,h,c2), initCHC(c1,h,c2).
CHC_3(c1,h,c3) :- !CHC_2(c1,h,c3), CHC_1(c1,h,c3).

CHC(c1,h,c3) :- CHC_2(c1,h,c3).
CHC(c1,h,c3) :- MH(m,h), CM(c1,m), HK(h,k), initCHC(c1,h,c2), truncCKC(c2,k,c3), CHC_3(c1,h,c3).