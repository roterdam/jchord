# This is a RAW dictionary file, not checked by hand for accuracy.
# It was produced automatically by the configuration analyzer.
# Contact Ari Rabkin <asrabkin@gmail.com> with comments or questions.
# This file may be freely redistributed; no copyright is asserted.

#added by ari
PROP-chord.methodRemapFile	File
PROP-chord.useSpellcheck	Boolean

#autogenerated
PROP-argGuesses	Boolean
PROP-bddcache	Integral
PROP-bddminfree	Fraction
PROP-bddnodes	Integral
PROP-bddreverse		{true}
PROP-chord..*.addToView	
PROP-chord..*.deleteFiles	
PROP-chord..*.finalPoolPath	
PROP-chord.add.phantom.classes	Boolean
PROP-chord.args..*	
PROP-chord.bddbddb.max.heap	
PROP-chord.bddbddb.work.dir	File
PROP-chord.boot.classes.dir	File
PROP-chord.build.scope	Boolean
PROP-chord.ch.kind	
PROP-chord.check.exclude	
PROP-chord.class.path	
PROP-chord.classes.file	File
PROP-chord.classic		{true}
PROP-chord.ctxt.kind	
PROP-chord.dlog.analysis.path	
PROP-chord.domK.size	Integral
PROP-chord.dynamic.haltonerr	Boolean
PROP-chord.dynamic.runBeforeCmd	
PROP-chord.dynamic.timeout	Integral
PROP-chord.entrypoints	
PROP-chord.entrypoints.file	File
PROP-chord.err.file	File
PROP-chord.exclude.escaping	Boolean
PROP-chord.exclude.nongrded	Boolean
PROP-chord.exclude.nonreent	Boolean
PROP-chord.exclude.parallel	Boolean
PROP-chord.ext.check.exclude	
PROP-chord.ext.dlog.analysis.path	
PROP-chord.ext.java.analysis.path	
PROP-chord.ext.scope.exclude	
PROP-chord.inst.ctxt.kind	Special	{ci,cs,co}
PROP-chord.instr.kind		{offline}
PROP-chord.instr.scheme.file	File
PROP-chord.java.analysis.path	
PROP-chord.jvmargs	
PROP-chord.kcfa.k	Integral
PROP-chord.kobj.k	Integral
PROP-chord.main.class	
PROP-chord.main.dir	
PROP-chord.max.cons.size	Integral
PROP-chord.max.heap	
PROP-chord.max.iters	Integral
PROP-chord.max.stack	
PROP-chord.methods.file	File
PROP-chord.out.dir	File
PROP-chord.out.file	File
PROP-chord.print.all.classes	Boolean
PROP-chord.print.classes	
PROP-chord.print.methods	
PROP-chord.print.project	Boolean
PROP-chord.print.rels	
PROP-chord.print.results	Boolean
PROP-chord.reflect.file	File
PROP-chord.reflect.kind	Special	{static,dynamic,static_cast}
PROP-chord.reuse.rels	Boolean
PROP-chord.reuse.scope	Boolean
PROP-chord.reuse.traces	Boolean
PROP-chord.run.analyses	
PROP-chord.run.ids	
PROP-chord.runtime.jvmargs	
PROP-chord.save.maps	Boolean
PROP-chord.scope.exclude	
PROP-chord.scope.fullscan	
PROP-chord.scope.kind	Special	{dynamic,rta,cha}
PROP-chord.src.path	
PROP-chord.ssa	Boolean
PROP-chord.stat.ctxt.kind	Special	{ci,cs,cc}
PROP-chord.std.check.exclude	
PROP-chord.std.dlog.analysis.path	
PROP-chord.std.java.analysis.path	
PROP-chord.std.scope.exclude	
PROP-chord.trace.block.size	Integral
PROP-chord.trace.file	
PROP-chord.trace.kind	Special	{full,pipe}
PROP-chord.use.buddy	Boolean
PROP-chord.use.jvmti	Boolean
PROP-chord.user.classes.dir	File
PROP-chord.verbose	Integral
PROP-chord.work.dir	File
PROP-confdep.dynamic	Special	{static,dynamic-track,dynamic-load}
PROP-confdep.scanlogs	Boolean
PROP-deadClasses.relevantPrefixes	
PROP-dictionary.name	
PROP-dictionary.scope	
PROP-dumpArgTaints	Boolean
PROP-execName	
PROP-explainlogs.minidatadep	Boolean
PROP-java.class.path	
PROP-java.vendor	
PROP-java.version	
PROP-os.arch	
PROP-os.name	
PROP-os.version	
PROP-percy		{true}
PROP-putIsInsert	Boolean
PROP-useMiniStrings	Boolean
