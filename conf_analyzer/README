This directory holds a configuration analyzer tool, being developed by Ari Rabkin at UC Bekeley. (Contact asrabkin@gmail.com for details)

The primary purpose of this tool is to extract spellcheck dictionaries, suitable for use with the associated configuration spellcheck tool.

The examples directory has a number of example configurations, for extracting options from several open-source programs, particularly in the Hadoop ecosystem.

OPTIONS:

There are four important options to set in customizing the analyzer.

chord.class.path specifies where the analyzer will look for code. It should be a list of jars or of directories holding classes.  Option names wrapped in ${name} will be macro-expanded.

chord.ext.scope.exclude specifies what code to ignore. Generally, you should try to ignore as much library and JVM code as you can, since it will result in the analysis going substantially faster.

chord.main.method specifies where to start analyzing. It should be the full name of a class containing a main method.

chord.entrypoints.file, if set, is the name of a file containing additional start locations. See below for a discussion of format.


ENTRYPOINTS FORMAT

The entrypoints file can hold three kinds of entries: methods, concrete classes, and interfaces/abstract classes

 *  (A fully qualified method name is of the form <name>:<desc>@<classname>.)
 *  If a concrete (non-abstract) class is listed, all public methods of that class will be added as entry points.
 *  If an interface or abstract class is listed, all public methods of all concrete instances of that interface/class will be added as entry points.

