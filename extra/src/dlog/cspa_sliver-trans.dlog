### WARNING: do not edit this file directly since it is automatically generated and can be overwritten at any point.
# name=cspa-sliver-trans-dlog
.include "F.dom"
.include "H.dom"
.include "I.dom"
.include "M.dom"
.include "T.dom"
.include "V.dom"
.include "Z.dom"
.include "C.dom"
.include "E.dom"
.bddvarorder F0_I0xI1xM0xM1_T0_V0xV1_T1_H0xH1_C0xC1xC2xC3_Z0_E0
HT(h:H0,t:T1) input
sub(t1:T1,t2:T0) input
MI(m:M,i:I) input
MH(m:M,h:H) input
MV(m:M,v:V) input
EV(e:E,v:V) input
statIM(i:I,m:M) input
classT(t:T) input
staticTM(t:T,m:M) input
staticTF(t:T,f:F) input
clinitTM(t:T,m:M) input
IinvkArg(i:I0,n:Z0,v:V1) input
MmethArg(m:M0,n:Z0,v:V0) input
MobjValAsgnInst(m:M,l:V,h:H)     input
MobjVarAsgnInst(m:M,l:V,r:V)     input
MgetInstFldInst(m:M,l:V,b:V,f:F) input
MputInstFldInst(m:M,b:V,f:F,r:V) input
MgetStatFldInst(m:M,l:V,f:F)     input
MputStatFldInst(m:M,f:F,r:V)     input
IM(i:I,m:M) input
argIVMV(i:I0,u:V1,m:M0,v:V0) input
retIVMV(i:I0,u:V0,m:M0,v:V1) input
reachableT(t:T) input
CfromMIC(cm:C,m:M,i:I,c:C) input
r_CfromMIC(cm:C,m:M,i:I,c:C) input # track
CfromMA(cm:C,m:M,a:C) input
r_CfromMA(cm:C,m:M,a:C) input # track
AfromHC(a:C,h:H,c:C) input
r_AfromHC(a:C,h:H,c:C) input # track
EfromVC(e:C,v:V,c:C) input
r_EfromVC(e:C,v:V,c:C) input # track
objI(i:I) input
relevantQueryE(e:E) input
reachableCI(c:C,i:I) input
r_reachableCI(c:C,i:I) input # track
reachableCM(c:C,m:M) input
r_reachableCM(c:C,m:M) input # track
VEfromVE(v1:V0,e1:C0,v2:V1,e2:C1) input
r_VEfromVE(v1:V,e1:C,v2:V,e2:C) input # track
CICM(ci:C,i:I,cm:C,m:M) input
r_CICM(ci:C,i:I,cm:C,m:M) input # track
VCA(v:V,c:C,a:C) input
r_VCA(v:V,c:C,a:C) input # track
VEA(v:V,e:C,a:C) input
r_VEA(v:V,e:C,a:C) input # track
FA(f:F,a:C) input
r_FA(f:F,a:C) input # track
AFA(a1:C,f:F,a2:C) input
r_AFA(a1:C,f:F,a2:C) input # track
escA(a:C) input
r_escA(a:C) input # track
escE(e:E) input
r_escE(e:E) input # track

### reachableCM(0,m) :- clinitTM(t,m), reachableT(t).

### reachableCM(cm,m) :- CICM(_,_,cm,m).
# TRANS - t_CICM_reachableCM CICM reachableCM 0,1,2,3 2,3
t_CICM_reachableCM(x1:C,x2:I,cm:C,m:M) output
t_CICM_reachableCM(x1,x2,cm,m) :- r_reachableCM(cm,m), CICM(x1,x2,cm,m).

### reachableCI(c,i) :- reachableCM(c,m), MI(m,i).
# TRANS - t_reachableCM_reachableCI reachableCM reachableCI 0,1 0,2
t_reachableCM_reachableCI(c:C,m:M,i:I) output
t_reachableCM_reachableCI(c,m,i) :- r_reachableCI(c,i), reachableCM(c,m), MI(m,i).

### CICM(ci,i,cm,m) :- !objI(i), reachableCI(ci,i), IM(i,m), CfromMIC(cm,m,i,ci).
# TRANS call t_reachableCI_CICM reachableCI CICM 0,1 0,1,2,3
t_reachableCI_CICM(ci:C,i:I,cm:C,m:M) output
t_reachableCI_CICM(ci,i,cm,m) :- r_CICM(ci,i,cm,m), !objI(i), reachableCI(ci,i), IM(i,m), CfromMIC(cm,m,i,ci).
# TRANS call t_CfromMIC_CICM CfromMIC CICM 0,1,2,3 3,2,0,1
t_CfromMIC_CICM(cm:C,m:M,i:I,ci:C) output
t_CfromMIC_CICM(cm,m,i,ci) :- r_CICM(ci,i,cm,m), !objI(i), reachableCI(ci,i), IM(i,m), CfromMIC(cm,m,i,ci).

### CICM(ci,i,cm,m) :- objI(i), reachableCI(ci,i), IM(i,m), !statIM(i,m), IinvkArg(i,0,v), VCA(v,ci,a), CfromMA(cm,m,a).
# TRANS callI t_reachableCI_CICM1 reachableCI CICM 0,1 0,1,2,3
t_reachableCI_CICM1(ci:C,i:I,cm:C,m:M) output
t_reachableCI_CICM1(ci,i,cm,m) :- r_CICM(ci,i,cm,m), objI(i), reachableCI(ci,i), IM(i,m), !statIM(i,m), IinvkArg(i,0,v), VCA(v,ci,a), CfromMA(cm,m,a).
# TRANS callI t_VCA_CICM VCA CICM 0,1,2 1,3,4,5
t_VCA_CICM(v:V,ci:C,a:C,i:I,cm:C,m:M) output
t_VCA_CICM(v,ci,a,i,cm,m) :- r_CICM(ci,i,cm,m), objI(i), reachableCI(ci,i), IM(i,m), !statIM(i,m), IinvkArg(i,0,v), VCA(v,ci,a), CfromMA(cm,m,a).
# TRANS callI t_CfromMA_CICM CfromMA CICM 0,1,2 3,4,0,1
t_CfromMA_CICM(cm:C,m:M,a:C,ci:C,i:I) output
t_CfromMA_CICM(cm,m,a,ci,i) :- r_CICM(ci,i,cm,m), objI(i), reachableCI(ci,i), IM(i,m), !statIM(i,m), IinvkArg(i,0,v), VCA(v,ci,a), CfromMA(cm,m,a).

### CICM(ci,i,cm,m) :- objI(i), reachableCI(ci,i), statIM(i,m), ci=cm.
# TRANS callS t_reachableCI_CICM2 reachableCI CICM 0,1 0,1,2,3
t_reachableCI_CICM2(ci:C,i:I,cm:C,m:M) output
t_reachableCI_CICM2(ci,i,cm,m) :- r_CICM(ci,i,cm,m), objI(i), reachableCI(ci,i), statIM(i,m), ci=cm.

### VEfromVE(vm,em,vi,ei) :- argIVMV(i,vi,m,vm), CICM(ci,i,cm,m), EfromVC(em,vm,cm), EfromVC(ei,vi,ci).
# TRANS arg t_CICM_VEfromVE CICM VEfromVE 0,1,2,3 4,5,6,7
t_CICM_VEfromVE(ci:C,i:I,cm:C,m:M,vm:V,em:C,vi:V,ei:C) output
t_CICM_VEfromVE(ci,i,cm,m,vm,em,vi,ei) :- r_VEfromVE(vm,em,vi,ei), argIVMV(i,vi,m,vm), CICM(ci,i,cm,m), EfromVC(em,vm,cm), EfromVC(ei,vi,ci).
# TRANS arg t_EfromVC_VEfromVE EfromVC VEfromVE 0,1,2 1,0,3,4
t_EfromVC_VEfromVE(em:C,vm:V,cm:C,vi:V,ei:C) output
t_EfromVC_VEfromVE(em,vm,cm,vi,ei) :- r_VEfromVE(vm,em,vi,ei), argIVMV(i,vi,m,vm), CICM(ci,i,cm,m), EfromVC(em,vm,cm), EfromVC(ei,vi,ci).
# TRANS arg t_EfromVC_VEfromVE1 EfromVC VEfromVE 0,1,2 3,4,1,0
t_EfromVC_VEfromVE1(ei:C,vi:V,ci:C,vm:V,em:C) output
t_EfromVC_VEfromVE1(ei,vi,ci,vm,em) :- r_VEfromVE(vm,em,vi,ei), argIVMV(i,vi,m,vm), CICM(ci,i,cm,m), EfromVC(em,vm,cm), EfromVC(ei,vi,ci).

### VEfromVE(vi,ei,vm,em) :- retIVMV(i,vi,m,vm), CICM(ci,i,cm,m), EfromVC(em,vm,cm), EfromVC(ei,vi,ci).
# TRANS ret t_CICM_VEfromVE1 CICM VEfromVE 0,1,2,3 4,5,6,7
t_CICM_VEfromVE1(ci:C,i:I,cm:C,m:M,vi:V,ei:C,vm:V,em:C) output
t_CICM_VEfromVE1(ci,i,cm,m,vi,ei,vm,em) :- r_VEfromVE(vi,ei,vm,em), retIVMV(i,vi,m,vm), CICM(ci,i,cm,m), EfromVC(em,vm,cm), EfromVC(ei,vi,ci).
# TRANS ret t_EfromVC_VEfromVE2 EfromVC VEfromVE 0,1,2 3,4,1,0
t_EfromVC_VEfromVE2(em:C,vm:V,cm:C,vi:V,ei:C) output
t_EfromVC_VEfromVE2(em,vm,cm,vi,ei) :- r_VEfromVE(vi,ei,vm,em), retIVMV(i,vi,m,vm), CICM(ci,i,cm,m), EfromVC(em,vm,cm), EfromVC(ei,vi,ci).
# TRANS ret t_EfromVC_VEfromVE3 EfromVC VEfromVE 0,1,2 1,0,3,4
t_EfromVC_VEfromVE3(ei:C,vi:V,ci:C,vm:V,em:C) output
t_EfromVC_VEfromVE3(ei,vi,ci,vm,em) :- r_VEfromVE(vi,ei,vm,em), retIVMV(i,vi,m,vm), CICM(ci,i,cm,m), EfromVC(em,vm,cm), EfromVC(ei,vi,ci).

### VEA(v,e,a) :- VEfromVE(v,e,vv,ee), VEA(vv,ee,a).
# TRANS - t_VEfromVE_VEA VEfromVE VEA 0,1,2,3 0,1,4
t_VEfromVE_VEA(v:V,e:C,vv:V,ee:C,a:C) output
t_VEfromVE_VEA(v,e,vv,ee,a) :- r_VEA(v,e,a), VEfromVE(v,e,vv,ee), VEA(vv,ee,a).
# TRANS - t_VEA_VEA VEA VEA 0,1,2 3,4,2
t_VEA_VEA(vv:V,ee:C,a:C,v:V,e:C) output
t_VEA_VEA(vv,ee,a,v,e) :- r_VEA(v,e,a), VEfromVE(v,e,vv,ee), VEA(vv,ee,a).

### VEA(l,el,a) :- reachableCM(c,m), MobjValAsgnInst(m,l,h), EfromVC(el,l,c), AfromHC(a,h,c).
# TRANS new t_reachableCM_VEA reachableCM VEA 0,1 2,3,4
t_reachableCM_VEA(c:C,m:M,l:V,el:C,a:C) output
t_reachableCM_VEA(c,m,l,el,a) :- r_VEA(l,el,a), reachableCM(c,m), MobjValAsgnInst(m,l,h), EfromVC(el,l,c), AfromHC(a,h,c).
# TRANS new t_EfromVC_VEA EfromVC VEA 0,1,2 1,0,3
t_EfromVC_VEA(el:C,l:V,c:C,a:C) output
t_EfromVC_VEA(el,l,c,a) :- r_VEA(l,el,a), reachableCM(c,m), MobjValAsgnInst(m,l,h), EfromVC(el,l,c), AfromHC(a,h,c).
# TRANS new t_AfromHC_VEA AfromHC VEA 0,1,2 3,4,0
t_AfromHC_VEA(a:C,h:H,c:C,l:V,el:C) output
t_AfromHC_VEA(a,h,c,l,el) :- r_VEA(l,el,a), reachableCM(c,m), MobjValAsgnInst(m,l,h), EfromVC(el,l,c), AfromHC(a,h,c).

### VEA(l,el,a) :- reachableCM(c,m), MobjVarAsgnInst(m,l,r), EfromVC(el,l,c), VCA(r,c,a).
# TRANS var t_reachableCM_VEA1 reachableCM VEA 0,1 2,3,4
t_reachableCM_VEA1(c:C,m:M,l:V,el:C,a:C) output
t_reachableCM_VEA1(c,m,l,el,a) :- r_VEA(l,el,a), reachableCM(c,m), MobjVarAsgnInst(m,l,r), EfromVC(el,l,c), VCA(r,c,a).
# TRANS var t_EfromVC_VEA1 EfromVC VEA 0,1,2 1,0,3
t_EfromVC_VEA1(el:C,l:V,c:C,a:C) output
t_EfromVC_VEA1(el,l,c,a) :- r_VEA(l,el,a), reachableCM(c,m), MobjVarAsgnInst(m,l,r), EfromVC(el,l,c), VCA(r,c,a).
# TRANS var t_VCA_VEA VCA VEA 0,1,2 3,4,2
t_VCA_VEA(r:V,c:C,a:C,l:V,el:C) output
t_VCA_VEA(r,c,a,l,el) :- r_VEA(l,el,a), reachableCM(c,m), MobjVarAsgnInst(m,l,r), EfromVC(el,l,c), VCA(r,c,a).

### VEA(l,el,aa) :- reachableCM(c,m), MgetInstFldInst(m,l,b,f), EfromVC(el,l,c), VCA(b,c,a), AFA(a,f,aa).
# TRANS hr t_reachableCM_VEA2 reachableCM VEA 0,1 2,3,4
t_reachableCM_VEA2(c:C,m:M,l:V,el:C,aa:C) output
t_reachableCM_VEA2(c,m,l,el,aa) :- r_VEA(l,el,aa), reachableCM(c,m), MgetInstFldInst(m,l,b,f), EfromVC(el,l,c), VCA(b,c,a), AFA(a,f,aa).
# TRANS hr t_EfromVC_VEA2 EfromVC VEA 0,1,2 1,0,3
t_EfromVC_VEA2(el:C,l:V,c:C,aa:C) output
t_EfromVC_VEA2(el,l,c,aa) :- r_VEA(l,el,aa), reachableCM(c,m), MgetInstFldInst(m,l,b,f), EfromVC(el,l,c), VCA(b,c,a), AFA(a,f,aa).
# TRANS hr t_VCA_VEA1 VCA VEA 0,1,2 3,4,5
t_VCA_VEA1(b:V,c:C,a:C,l:V,el:C,aa:C) output
t_VCA_VEA1(b,c,a,l,el,aa) :- r_VEA(l,el,aa), reachableCM(c,m), MgetInstFldInst(m,l,b,f), EfromVC(el,l,c), VCA(b,c,a), AFA(a,f,aa).
# TRANS hr t_AFA_VEA AFA VEA 0,1,2 3,4,2
t_AFA_VEA(a:C,f:F,aa:C,l:V,el:C) output
t_AFA_VEA(a,f,aa,l,el) :- r_VEA(l,el,aa), reachableCM(c,m), MgetInstFldInst(m,l,b,f), EfromVC(el,l,c), VCA(b,c,a), AFA(a,f,aa).

### VEA(l,el,a) :- reachableCM(c,m), MgetStatFldInst(m,l,f), EfromVC(el,l,c), FA(f,a).
# TRANS gr t_reachableCM_VEA3 reachableCM VEA 0,1 2,3,4
t_reachableCM_VEA3(c:C,m:M,l:V,el:C,a:C) output
t_reachableCM_VEA3(c,m,l,el,a) :- r_VEA(l,el,a), reachableCM(c,m), MgetStatFldInst(m,l,f), EfromVC(el,l,c), FA(f,a).
# TRANS gr t_EfromVC_VEA3 EfromVC VEA 0,1,2 1,0,3
t_EfromVC_VEA3(el:C,l:V,c:C,a:C) output
t_EfromVC_VEA3(el,l,c,a) :- r_VEA(l,el,a), reachableCM(c,m), MgetStatFldInst(m,l,f), EfromVC(el,l,c), FA(f,a).
# TRANS gr t_FA_VEA FA VEA 0,1 2,3,1
t_FA_VEA(f:F,a:C,l:V,el:C) output
t_FA_VEA(f,a,l,el) :- r_VEA(l,el,a), reachableCM(c,m), MgetStatFldInst(m,l,f), EfromVC(el,l,c), FA(f,a).

### AFA(a,f,aa) :- reachableCM(c,m), MputInstFldInst(m,b,f,r), VCA(b,c,a), VCA(r,c,aa).
# TRANS hw t_reachableCM_AFA reachableCM AFA 0,1 2,3,4
t_reachableCM_AFA(c:C,m:M,a:C,f:F,aa:C) output
t_reachableCM_AFA(c,m,a,f,aa) :- r_AFA(a,f,aa), reachableCM(c,m), MputInstFldInst(m,b,f,r), VCA(b,c,a), VCA(r,c,aa).
# TRANS hw t_VCA_AFA VCA AFA 0,1,2 2,3,4
t_VCA_AFA(b:V,c:C,a:C,f:F,aa:C) output
t_VCA_AFA(b,c,a,f,aa) :- r_AFA(a,f,aa), reachableCM(c,m), MputInstFldInst(m,b,f,r), VCA(b,c,a), VCA(r,c,aa).
# TRANS hw t_VCA_AFA1 VCA AFA 0,1,2 3,4,2
t_VCA_AFA1(r:V,c:C,aa:C,a:C,f:F) output
t_VCA_AFA1(r,c,aa,a,f) :- r_AFA(a,f,aa), reachableCM(c,m), MputInstFldInst(m,b,f,r), VCA(b,c,a), VCA(r,c,aa).

### FA(f,a) :- reachableCM(c,m), MputStatFldInst(m,f,r), VCA(r,c,a).
# TRANS gw t_reachableCM_FA reachableCM FA 0,1 2,3
t_reachableCM_FA(c:C,m:M,f:F,a:C) output
t_reachableCM_FA(c,m,f,a) :- r_FA(f,a), reachableCM(c,m), MputStatFldInst(m,f,r), VCA(r,c,a).
# TRANS gw t_VCA_FA VCA FA 0,1,2 3,2
t_VCA_FA(r:V,c:C,a:C,f:F) output
t_VCA_FA(r,c,a,f) :- r_FA(f,a), reachableCM(c,m), MputStatFldInst(m,f,r), VCA(r,c,a).

### FA(0,a) :- reachableCM(c,1), MmethArg(1,0,v), VCA(v,c,a).
# TRANS ts t_reachableCM_FA1 reachableCM FA 0,1 2,3
t_reachableCM_FA1(c:C,1:M,0:F,a:C) output
t_reachableCM_FA1(c,1,0,a) :- r_FA(0,a), reachableCM(c,1), MmethArg(1,0,v), VCA(v,c,a).
# TRANS ts t_VCA_FA1 VCA FA 0,1,2 3,2
t_VCA_FA1(v:V,c:C,a:C,0:F) output
t_VCA_FA1(v,c,a,0) :- r_FA(0,a), reachableCM(c,1), MmethArg(1,0,v), VCA(v,c,a).

### VCA(v,c,a) :- EfromVC(e,v,c), VEA(v,e,a).
# TRANS - t_EfromVC_VCA EfromVC VCA 0,1,2 1,2,3
t_EfromVC_VCA(e:C,v:V,c:C,a:C) output
t_EfromVC_VCA(e,v,c,a) :- r_VCA(v,c,a), EfromVC(e,v,c), VEA(v,e,a).
# TRANS - t_VEA_VCA VEA VCA 0,1,2 0,3,2
t_VEA_VCA(v:V,e:C,a:C,c:C) output
t_VEA_VCA(v,e,a,c) :- r_VCA(v,c,a), EfromVC(e,v,c), VEA(v,e,a).

### escA(a) :- FA(_,a).
# TRANS - t_FA_escA FA escA 0,1 1
t_FA_escA(x3:F,a:C) output
t_FA_escA(x3,a) :- r_escA(a), FA(x3,a).

### escA(a) :- escA(b), AFA(b,_,a).
# TRANS - t_escA_escA escA escA 0 1
t_escA_escA(b:C,a:C) output
t_escA_escA(b,a) :- r_escA(a), escA(b), AFA(b,_,a).
# TRANS - t_AFA_escA AFA escA 0,1,2 2
t_AFA_escA(b:C,x4:F,a:C) output
t_AFA_escA(b,x4,a) :- r_escA(a), escA(b), AFA(b,x4,a).

### escE(e) :- relevantQueryE(e), EV(e,v), VCA(v,_,a), escA(a).
# TRANS - t_VCA_escE VCA escE 0,1,2 3
t_VCA_escE(v:V,x5:C,a:C,e:E) output
t_VCA_escE(v,x5,a,e) :- r_escE(e), relevantQueryE(e), EV(e,v), VCA(v,x5,a), escA(a).
# TRANS - t_escA_escE escA escE 0 1
t_escA_escE(a:C,e:E) output
t_escA_escE(a,e) :- r_escE(e), relevantQueryE(e), EV(e,v), VCA(v,_,a), escA(a).
