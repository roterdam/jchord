### WARNING: do not edit this file directly since it is automatically generated and can be overwritten at any point.
# name=race-sliver-relevant-dlog

.include "C.dom"
.include "D.dom"
.include "E.dom"
.include "F.dom"
.include "H.dom"
.include "I.dom"
.include "M.dom"
.include "P.dom"
.include "T.dom"
.include "V.dom"
.include "Z.dom"
.bddvarorder F0_D0xD1xD2xD3xD4_P0xP1xP2_I0xI1xM0xM1_T0_V0xV1_T1_H0xH1_C0xC1xC2xC3_Z0_E0xE1

HT(h:H0,t:T1) input
sub(t1:T1,t2:T0) input
MI(m:M,i:I) input
MH(m:M,h:H) input
MV(m:M,v:V) input
statIM(i:I,m:M) input
specIM(i:I,m:M) input
IM(i:I,m:M) input
IHM(i:I,h:H,m:M) input
classT(t:T) input
staticTM(t:T,m:M) input
staticTF(t:T,f:F) input
clinitTM(t:T,m:M) input
IinvkArg(i:I0,n:Z0,v:V1) input
IinvkArg0(i:I0,v:V1) input
IinvkRet(i:I0,n:Z0,v:V0) input
MmethArg(m:M0,n:Z0,v:V0) input
MmethRet(m:M0,n:Z0,v:V1) input
VHfilter(v:V,h:H) input
statM(m:M) input
clsForNameIT(i:I0,t:T0) input
objNewInstIH(i:I0,h:H0) input
objNewInstIM(i:I0,m:M0) input
conNewInstIH(i:I0,h:H0) input
conNewInstIM(i:I0,m:M0) input
aryNewInstIH(i:I0,h:H0) input
MobjValAsgnInst(m:M,l:V,h:H)     input
MobjVarAsgnInst(m:M,l:V,r:V)     input
MgetInstFldInst(m:M,l:V,b:V,f:F) input
MputInstFldInst(m:M,b:V,f:F,r:V) input
MgetStatFldInst(m:M,l:V,f:F)     input
MputStatFldInst(m:M,f:F,r:V)     input
RobjValAsgnInst(c:C,l:V,h:H) input
r_RobjValAsgnInst(c:C,l:V,h:H) output # track
RobjVarAsgnInst(c:C,l:V,r:V) input
r_RobjVarAsgnInst(c:C,l:V,r:V) output # track
RgetInstFldInst(c:C,l:V,b:V,f:F) input
r_RgetInstFldInst(c:C,l:V,b:V,f:F) output # track
RputInstFldInst(c:C,b:V,f:F,r:V) input
r_RputInstFldInst(c:C,b:V,f:F,r:V) output # track
RgetStatFldInst(c:C,l:V,f:F) input
r_RgetStatFldInst(c:C,l:V,f:F) output # track
RputStatFldInst(c:C,f:F,r:V) input
r_RputStatFldInst(c:C,f:F,r:V) output # track
CH(c:C,h:H) input
r_CH(c:C,h:H) output # track
CI(c:C,i:I) input
r_CI(c:C,i:I) output # track
CC(c:C,c:C) input
objI(i:I) input
CfromHC(cm:C,h:H,c:C) input
r_CfromHC(cm:C,h:H,c:C) output # track
CfromIC(cm:C,i:I,c:C) input
r_CfromIC(cm:C,i:I,c:C) output # track

### CfromHC(cm,h,c) :- CC(c,cm), CH(cm,h).
r_CH(cm,h) :- r_CfromHC(cm,h,c), CC(c,cm), CH(cm,h).

### CfromIC(ci,i,c) :- CC(c,ci), CI(ci,i).
r_CI(ci,i) :- r_CfromIC(ci,i,c), CC(c,ci), CI(ci,i).
objM(m:M) input
r_objM(m:M) output # track
MspcMethArg(m:M,v:V) input
r_MspcMethArg(m:M,v:V) output # track
MordMethArg(m:M,z:Z,v:V) input
r_MordMethArg(m:M,z:Z,v:V) output # track
argIVMV(i:I0,u:V1,m:M0,v:V0) input
r_argIVMV(i:I,u:V,m:M,v:V) output # track
retIVMV(i:I0,u:V0,m:M0,v:V1) input
r_retIVMV(i:I,u:V,m:M,v:V) output # track
CIA(c:C,i:I,a:C) input
r_CIA(c:C,i:I,a:C) output # track
CIH(c:C,i:I,h:H) input
r_CIH(c:C,i:I,h:H) output # track
ICM(i:I,c:C,m:M) input
r_ICM(i:I,c:C,m:M) output # track
CIany(c:C,i:I) input
r_CIany(c:C,i:I) output # track
reachableCI(c:C,i:I) input
r_reachableCI(c:C,i:I) output # track
reachableCM(c:C,m:M) input
r_reachableCM(c:C,m:M) output # track
VCfromVC(v1:V0,e1:C0,v2:V1,e2:C1) input
r_VCfromVC(v1:V,e1:C,v2:V,e2:C) output # track
CICM(ci:C,i:I,cm:C,m:M) input
r_CICM(ci:C,i:I,cm:C,m:M) output # track
VAfilter(v:V,a:C) input
r_VAfilter(v:V,a:C) output # track
VCA(v:V,e:C,a:C) input
r_VCA(v:V,e:C,a:C) output # track
FA(f:F,a:C) input
r_FA(f:F,a:C) output # track
AFA(a1:C,f:F,a2:C) input
r_AFA(a1:C,f:F,a2:C) output # track
reachableT(t:T) input
r_reachableT(t:T) output # track

### VAfilter(v,a) :- VHfilter(v,h), CH(a,h).
r_CH(a,h) :- r_VAfilter(v,a), VHfilter(v,h), CH(a,h).

### reachableCM(0,m) :- clinitTM(t,m), reachableT(t).
r_reachableT(t) :- r_reachableCM(0,m), clinitTM(t,m), reachableT(t).

### reachableCM(cm,m) :- CICM(_,_,cm,m).
r_CICM(x1,x2,cm,m) :- r_reachableCM(cm,m), CICM(x1,x2,cm,m).

### reachableCI(c,i) :- reachableCM(c,m), MI(m,i).
r_reachableCM(c,m) :- r_reachableCI(c,i), reachableCM(c,m), MI(m,i).

### CIA(c,i,a) :- IinvkArg0(i,v), VCA(v,c,a).
r_VCA(v,c,a) :- r_CIA(c,i,a), IinvkArg0(i,v), VCA(v,c,a).

### CIH(c,i,h) :- CIA(c,i,a), CH(a,h).
r_CIA(c,i,a) :- r_CIH(c,i,h), CIA(c,i,a), CH(a,h).
r_CH(a,h) :- r_CIH(c,i,h), CIA(c,i,a), CH(a,h).

### CIany(c,i) :- CIH(c,i,_).
r_CIH(c,i,x3) :- r_CIany(c,i), CIH(c,i,x3).

### ICM(i,c,m) :- IHM(i,h,m), CH(c,h).
r_CH(c,h) :- r_ICM(i,c,m), IHM(i,h,m), CH(c,h).

### CICM(c,i,d,m) :- !objI(i), reachableCI(c,i), IHM(i,h,m), CfromIC(d,i,c), CIH(c,i,h).
r_reachableCI(c,i) :- r_CICM(c,i,d,m), !objI(i), reachableCI(c,i), IHM(i,h,m), CfromIC(d,i,c), CIH(c,i,h).
r_CfromIC(d,i,c) :- r_CICM(c,i,d,m), !objI(i), reachableCI(c,i), IHM(i,h,m), CfromIC(d,i,c), CIH(c,i,h).
r_CIH(c,i,h) :- r_CICM(c,i,d,m), !objI(i), reachableCI(c,i), IHM(i,h,m), CfromIC(d,i,c), CIH(c,i,h).

### CICM(c,i,d,m) :- !objI(i), reachableCI(c,i), specIM(i,m), CfromIC(d,i,c), CIany(c,i).
r_reachableCI(c,i) :- r_CICM(c,i,d,m), !objI(i), reachableCI(c,i), specIM(i,m), CfromIC(d,i,c), CIany(c,i).
r_CfromIC(d,i,c) :- r_CICM(c,i,d,m), !objI(i), reachableCI(c,i), specIM(i,m), CfromIC(d,i,c), CIany(c,i).
r_CIany(c,i) :- r_CICM(c,i,d,m), !objI(i), reachableCI(c,i), specIM(i,m), CfromIC(d,i,c), CIany(c,i).

### CICM(c,i,d,m) :- !objI(i), reachableCI(c,i), statIM(i,m), CfromIC(d,i,c).
r_reachableCI(c,i) :- r_CICM(c,i,d,m), !objI(i), reachableCI(c,i), statIM(i,m), CfromIC(d,i,c).
r_CfromIC(d,i,c) :- r_CICM(c,i,d,m), !objI(i), reachableCI(c,i), statIM(i,m), CfromIC(d,i,c).

### CICM(c,i,d,m) :- objI(i), reachableCI(c,i), ICM(i,d,m), CIA(c,i,d).
r_reachableCI(c,i) :- r_CICM(c,i,d,m), objI(i), reachableCI(c,i), ICM(i,d,m), CIA(c,i,d).
r_ICM(i,d,m) :- r_CICM(c,i,d,m), objI(i), reachableCI(c,i), ICM(i,d,m), CIA(c,i,d).
r_CIA(c,i,d) :- r_CICM(c,i,d,m), objI(i), reachableCI(c,i), ICM(i,d,m), CIA(c,i,d).

### CICM(c,i,d,m) :- objI(i), reachableCI(c,i), specIM(i,m), CIA(c,i,d).
r_reachableCI(c,i) :- r_CICM(c,i,d,m), objI(i), reachableCI(c,i), specIM(i,m), CIA(c,i,d).
r_CIA(c,i,d) :- r_CICM(c,i,d,m), objI(i), reachableCI(c,i), specIM(i,m), CIA(c,i,d).

### CICM(c,i,d,m) :- objI(i), reachableCI(c,i), statIM(i,m), c=d.
r_reachableCI(c,i) :- r_CICM(c,i,d,m), objI(i), reachableCI(c,i), statIM(i,m), c=d.

### objM(m) :- objI(i), IM(i,m), !statM(m).

### MspcMethArg(m,v) :- MmethArg(m,0,v), objM(m).
r_objM(m) :- r_MspcMethArg(m,v), MmethArg(m,0,v), objM(m).

### MordMethArg(m,0,v) :- MmethArg(m,0,v), !MspcMethArg(m,v).
!r_MspcMethArg(m,v) :- r_MordMethArg(m,0,v), MmethArg(m,0,v), !MspcMethArg(m,v).

### MordMethArg(m,z,v) :- MmethArg(m,z,v), z!=0.

### argIVMV(i,vi,m,vm) :- IM(i,m), IinvkArg(i,z,vi), MordMethArg(m,z,vm).
r_MordMethArg(m,z,vm) :- r_argIVMV(i,vi,m,vm), IM(i,m), IinvkArg(i,z,vi), MordMethArg(m,z,vm).

### retIVMV(i,vi,m,vm) :- IM(i,m), IinvkRet(i,z,vi), MmethRet(m,z,vm).

### VCA(v,c,a) :- reachableCM(c,m), MspcMethArg(m,v), a=c.
r_reachableCM(c,m) :- r_VCA(v,c,a), reachableCM(c,m), MspcMethArg(m,v), a=c.
r_MspcMethArg(m,v) :- r_VCA(v,c,a), reachableCM(c,m), MspcMethArg(m,v), a=c.

### VCfromVC(vm,cm,vi,ci) :- argIVMV(i,vi,m,vm), CICM(ci,i,cm,m).
r_argIVMV(i,vi,m,vm) :- r_VCfromVC(vm,cm,vi,ci), argIVMV(i,vi,m,vm), CICM(ci,i,cm,m).
r_CICM(ci,i,cm,m) :- r_VCfromVC(vm,cm,vi,ci), argIVMV(i,vi,m,vm), CICM(ci,i,cm,m).

### VCfromVC(vi,ci,vm,cm) :- retIVMV(i,vi,m,vm), CICM(ci,i,cm,m).
r_retIVMV(i,vi,m,vm) :- r_VCfromVC(vi,ci,vm,cm), retIVMV(i,vi,m,vm), CICM(ci,i,cm,m).
r_CICM(ci,i,cm,m) :- r_VCfromVC(vi,ci,vm,cm), retIVMV(i,vi,m,vm), CICM(ci,i,cm,m).

### VCA(v,c,a) :- VCfromVC(v,c,vv,cc), VCA(vv,cc,a), VAfilter(v,a).
r_VCfromVC(v,c,vv,cc) :- r_VCA(v,c,a), VCfromVC(v,c,vv,cc), VCA(vv,cc,a), VAfilter(v,a).
r_VCA(vv,cc,a) :- r_VCA(v,c,a), VCfromVC(v,c,vv,cc), VCA(vv,cc,a), VAfilter(v,a).
r_VAfilter(v,a) :- r_VCA(v,c,a), VCfromVC(v,c,vv,cc), VCA(vv,cc,a), VAfilter(v,a).

### RobjValAsgnInst(c,l,h) :- reachableCM(c,m), MobjValAsgnInst(m,l,h).
r_reachableCM(c,m) :- r_RobjValAsgnInst(c,l,h), reachableCM(c,m), MobjValAsgnInst(m,l,h).

### RobjVarAsgnInst(c,l,r) :- reachableCM(c,m), MobjVarAsgnInst(m,l,r).
r_reachableCM(c,m) :- r_RobjVarAsgnInst(c,l,r), reachableCM(c,m), MobjVarAsgnInst(m,l,r).

### RgetInstFldInst(c,l,b,f) :- reachableCM(c,m), MgetInstFldInst(m,l,b,f).
r_reachableCM(c,m) :- r_RgetInstFldInst(c,l,b,f), reachableCM(c,m), MgetInstFldInst(m,l,b,f).

### RgetStatFldInst(c,l,f) :- reachableCM(c,m), MgetStatFldInst(m,l,f).
r_reachableCM(c,m) :- r_RgetStatFldInst(c,l,f), reachableCM(c,m), MgetStatFldInst(m,l,f).

### RputInstFldInst(c,b,f,r) :- reachableCM(c,m), MputInstFldInst(m,b,f,r).
r_reachableCM(c,m) :- r_RputInstFldInst(c,b,f,r), reachableCM(c,m), MputInstFldInst(m,b,f,r).

### RputStatFldInst(c,f,r) :- reachableCM(c,m), MputStatFldInst(m,f,r).
r_reachableCM(c,m) :- r_RputStatFldInst(c,f,r), reachableCM(c,m), MputStatFldInst(m,f,r).

### VCA(l,c,a) :- RobjValAsgnInst(c,l,h), CfromHC(a,h,c).
r_RobjValAsgnInst(c,l,h) :- r_VCA(l,c,a), RobjValAsgnInst(c,l,h), CfromHC(a,h,c).
r_CfromHC(a,h,c) :- r_VCA(l,c,a), RobjValAsgnInst(c,l,h), CfromHC(a,h,c).

### VCA(l,c,a) :- RobjVarAsgnInst(c,l,r), VCA(r,c,a), VAfilter(l,a).
r_RobjVarAsgnInst(c,l,r) :- r_VCA(l,c,a), RobjVarAsgnInst(c,l,r), VCA(r,c,a), VAfilter(l,a).
r_VCA(r,c,a) :- r_VCA(l,c,a), RobjVarAsgnInst(c,l,r), VCA(r,c,a), VAfilter(l,a).
r_VAfilter(l,a) :- r_VCA(l,c,a), RobjVarAsgnInst(c,l,r), VCA(r,c,a), VAfilter(l,a).

### VCA(l,c,aa) :- RgetInstFldInst(c,l,b,f), VCA(b,c,a), AFA(a,f,aa).
r_RgetInstFldInst(c,l,b,f) :- r_VCA(l,c,aa), RgetInstFldInst(c,l,b,f), VCA(b,c,a), AFA(a,f,aa).
r_VCA(b,c,a) :- r_VCA(l,c,aa), RgetInstFldInst(c,l,b,f), VCA(b,c,a), AFA(a,f,aa).
r_AFA(a,f,aa) :- r_VCA(l,c,aa), RgetInstFldInst(c,l,b,f), VCA(b,c,a), AFA(a,f,aa).

### VCA(l,c,a) :- RgetStatFldInst(c,l,f), FA(f,a).
r_RgetStatFldInst(c,l,f) :- r_VCA(l,c,a), RgetStatFldInst(c,l,f), FA(f,a).
r_FA(f,a) :- r_VCA(l,c,a), RgetStatFldInst(c,l,f), FA(f,a).

### AFA(a,f,aa) :- RputInstFldInst(c,b,f,r), VCA(b,c,a), VCA(r,c,aa).
r_RputInstFldInst(c,b,f,r) :- r_AFA(a,f,aa), RputInstFldInst(c,b,f,r), VCA(b,c,a), VCA(r,c,aa).
r_VCA(b,c,a) :- r_AFA(a,f,aa), RputInstFldInst(c,b,f,r), VCA(b,c,a), VCA(r,c,aa).
r_VCA(r,c,aa) :- r_AFA(a,f,aa), RputInstFldInst(c,b,f,r), VCA(b,c,a), VCA(r,c,aa).

### FA(f,a) :- RputStatFldInst(c,f,r), VCA(r,c,a).
r_RputStatFldInst(c,f,r) :- r_FA(f,a), RputStatFldInst(c,f,r), VCA(r,c,a).
r_VCA(r,c,a) :- r_FA(f,a), RputStatFldInst(c,f,r), VCA(r,c,a).

### reachableCM(c,m) :- reachableCI(c,i), objNewInstIM(i,m).
r_reachableCI(c,i) :- r_reachableCM(c,m), reachableCI(c,i), objNewInstIM(i,m).

### reachableCM(c,m) :- reachableCI(c,i), conNewInstIM(i,m).
r_reachableCI(c,i) :- r_reachableCM(c,m), reachableCI(c,i), conNewInstIM(i,m).

### VCA(v,c,o) :- reachableCI(c,i), objNewInstIM(i,m), MmethArg(m,0,v), objNewInstIH(i,h), CfromHC(o,h,c).
r_reachableCI(c,i) :- r_VCA(v,c,o), reachableCI(c,i), objNewInstIM(i,m), MmethArg(m,0,v), objNewInstIH(i,h), CfromHC(o,h,c).
r_CfromHC(o,h,c) :- r_VCA(v,c,o), reachableCI(c,i), objNewInstIM(i,m), MmethArg(m,0,v), objNewInstIH(i,h), CfromHC(o,h,c).

### VCA(v,c,o) :- reachableCI(c,i), objNewInstIH(i,h), IinvkRet(i,0,v), CfromHC(o,h,c).
r_reachableCI(c,i) :- r_VCA(v,c,o), reachableCI(c,i), objNewInstIH(i,h), IinvkRet(i,0,v), CfromHC(o,h,c).
r_CfromHC(o,h,c) :- r_VCA(v,c,o), reachableCI(c,i), objNewInstIH(i,h), IinvkRet(i,0,v), CfromHC(o,h,c).

### VCA(v,c,o2) :- reachableCI(c,i), conNewInstIM(i,m), IinvkArg(i,1,u), MmethArg(m,1,v), VCA(u,c,o), AFA(o,0,o2).
r_reachableCI(c,i) :- r_VCA(v,c,o2), reachableCI(c,i), conNewInstIM(i,m), IinvkArg(i,1,u), MmethArg(m,1,v), VCA(u,c,o), AFA(o,0,o2).
r_VCA(u,c,o) :- r_VCA(v,c,o2), reachableCI(c,i), conNewInstIM(i,m), IinvkArg(i,1,u), MmethArg(m,1,v), VCA(u,c,o), AFA(o,0,o2).
r_AFA(o,0,o2) :- r_VCA(v,c,o2), reachableCI(c,i), conNewInstIM(i,m), IinvkArg(i,1,u), MmethArg(m,1,v), VCA(u,c,o), AFA(o,0,o2).

### VCA(v,c,o) :- reachableCI(c,i), conNewInstIM(i,m), MmethArg(m,0,v), conNewInstIH(i,h), CfromHC(o,h,c).
r_reachableCI(c,i) :- r_VCA(v,c,o), reachableCI(c,i), conNewInstIM(i,m), MmethArg(m,0,v), conNewInstIH(i,h), CfromHC(o,h,c).
r_CfromHC(o,h,c) :- r_VCA(v,c,o), reachableCI(c,i), conNewInstIM(i,m), MmethArg(m,0,v), conNewInstIH(i,h), CfromHC(o,h,c).

### VCA(v,c,o) :- reachableCI(c,i), conNewInstIH(i,h), IinvkRet(i,0,v), CfromHC(o,h,c).
r_reachableCI(c,i) :- r_VCA(v,c,o), reachableCI(c,i), conNewInstIH(i,h), IinvkRet(i,0,v), CfromHC(o,h,c).
r_CfromHC(o,h,c) :- r_VCA(v,c,o), reachableCI(c,i), conNewInstIH(i,h), IinvkRet(i,0,v), CfromHC(o,h,c).

### VCA(v,c,o) :- reachableCI(c,i), aryNewInstIH(i,h), IinvkRet(i,0,v), CfromHC(o,h,c).
r_reachableCI(c,i) :- r_VCA(v,c,o), reachableCI(c,i), aryNewInstIH(i,h), IinvkRet(i,0,v), CfromHC(o,h,c).
r_CfromHC(o,h,c) :- r_VCA(v,c,o), reachableCI(c,i), aryNewInstIH(i,h), IinvkRet(i,0,v), CfromHC(o,h,c).

### reachableT(t) :- reachableCI(_,i), conNewInstIH(i,h), HT(h,t).
r_reachableCI(x4,i) :- r_reachableT(t), reachableCI(x4,i), conNewInstIH(i,h), HT(h,t).

### reachableT(t) :- reachableCI(_,i), objNewInstIH(i,h), HT(h,t).
r_reachableCI(x5,i) :- r_reachableT(t), reachableCI(x5,i), objNewInstIH(i,h), HT(h,t).

### reachableT(t) :- reachableCI(_,i), clsForNameIT(i,t).
r_reachableCI(x6,i) :- r_reachableT(t), reachableCI(x6,i), clsForNameIT(i,t).

### reachableT(t) :- reachableCM(_,m), MobjValAsgnInst(m,_,h), HT(h,t).
r_reachableCM(x7,m) :- r_reachableT(t), reachableCM(x7,m), MobjValAsgnInst(m,_,h), HT(h,t).

### reachableT(t) :- reachableCM(_,m), staticTM(t,m).
r_reachableCM(x9,m) :- r_reachableT(t), reachableCM(x9,m), staticTM(t,m).

### reachableT(t) :- reachableCM(_,m), MputStatFldInst(m,f,_), staticTF(t,f).
r_reachableCM(x10,m) :- r_reachableT(t), reachableCM(x10,m), MputStatFldInst(m,f,_), staticTF(t,f).

### reachableT(t) :- reachableCM(_,m), MgetStatFldInst(m,_,f), staticTF(t,f).
r_reachableCM(x12,m) :- r_reachableT(t), reachableCM(x12,m), MgetStatFldInst(m,_,f), staticTF(t,f).

### reachableT(t) :- classT(t), reachableT(s), sub(s,t).
r_reachableT(s) :- r_reachableT(t), classT(t), reachableT(s), sub(s,t).
inQueryEE(e1:E,e2:E) input
ME(m:M0,e:E0) input
statF(f:F0) input
EF(e:E0,f:F0) input
EV(e:E0,v:V0) input
PE(p:P0,e:E0) input
PP(p:P0,q:P1) input
MPhead(m:M0,p:P0) input
MPtail(m:M0,p:P0) input
PI(p:P0,i:I0) input
threadDHM(t:D,h:H,m:M) input
threadDCM(t:D,c:C,m:M) input
r_threadDCM(t:D,c:C,m:M) output # track
thrSenAbbrRootCM(c:C0,m:M0) input
r_thrSenAbbrRootCM(c:C,m:M) output # track
thrSenAbbrReachableCM(c:C0,m:M0)  input
r_thrSenAbbrReachableCM(c:C,m:M) output # track
thrSenAbbrCICM(c:C0,i:I0,d:C1,m:M0)  input
r_thrSenAbbrCICM(c:C,i:I,d:C,m:M) output # track
reachableTCMZ(t:D0,c:C0,m:M0) input
r_reachableTCMZ(t:D,c:C,m:M) output # track
reachableTCE(t:D0,c:C0,e:E0) input
r_reachableTCE(t:D,c:C,e:E) output # track
startingRaceHext(t1:D0,c1:C0,e1:E0,t2:D1,c2:C1,e2:E1) input
r_startingRaceHext(t1:D,c1:C,e1:E,t2:D,c2:C,e2:E) output # track
statE(e:E0) input
r_statE(e:E) output # track
CEC(c:C0,e:E0,o:C1) input
r_CEC(c:C,e:E,o:C) output # track
escA(a:C) input
r_escA(a:C) output # track
escapingRaceHext(t1:D0,c1:C0,e1:E0,t2:D1,c2:C1,e2:E1) input
r_escapingRaceHext(t1:D,c1:C,e1:E,t2:D,c2:C,e2:E) output # track
threadDC(t:D,c:C) input
r_threadDC(t:D,c:C) output # track
ForkPMcs(caller:C,p1:P,callee:C)  input
r_ForkPMcs(caller:C,p1:P,callee:C) output # track
ForkPHcs(caller:C,p1:P,callee:C,p2:P)  input
r_ForkPHcs(caller:C,p1:P,callee:C,p2:P) output # track
NonForkPMcs(caller:C,p1:P,callee:C,m2:M) input
r_NonForkPMcs(caller:C,p1:P,callee:C,m2:M) output # track
NonForkPHcs(caller:C,p1:P,callee:C,p2:P) input
r_NonForkPHcs(caller:C,p1:P,callee:C,p2:P) output # track
NonForkPTcs(caller:C,p1:P,callee:C,p2:P) input
r_NonForkPTcs(caller:C,p1:P,callee:C,p2:P) output # track
PathEdgeZ(c:C,p:P,this:D,sThat:D,tThat:D) input
r_PathEdgeZ(c:C,p:P,this:D,sThat:D,tThat:D) output # track
SummEdgeZ(c:C,p:P,this:D,sThat:D,tThat:D) input
r_SummEdgeZ(c:C,p:P,this:D,sThat:D,tThat:D) output # track
mhpZ(c:C0,p:P0,t1:D0,t2:D1) input
r_mhpZ(c:C,p:P,t1:D,t2:D) output # track
mheZ(c:C0,e:E0,t1:D0,t2:D1) input
r_mheZ(c:C,e:E,t1:D,t2:D) output # track
parallelRaceHext(t1:D0,c1:C0,e1:E0,t2:D1,c2:C1,e2:E1) input
r_parallelRaceHext(t1:D,c1:C,e1:E,t2:D,c2:C,e2:E) output # track
outQueryEE(e1:E0,e2:E1) input
r_outQueryEE(e1:E,e2:E) output # track

### escA(a) :- FA(_,a).
r_FA(x14,a) :- r_escA(a), FA(x14,a).

### escA(a) :- reachableCM(c,1), MmethArg(1,0,v), VCA(v,c,a).
r_reachableCM(c,1) :- r_escA(a), reachableCM(c,1), MmethArg(1,0,v), VCA(v,c,a).
r_VCA(v,c,a) :- r_escA(a), reachableCM(c,1), MmethArg(1,0,v), VCA(v,c,a).

### escA(a) :- escA(b), AFA(b,_,a).
r_escA(b) :- r_escA(a), escA(b), AFA(b,_,a).
r_AFA(b,x15,a) :- r_escA(a), escA(b), AFA(b,x15,a).

### thrSenAbbrRootCM(d,1) :- thrSenAbbrReachableCM(c,m), MI(m,i), CICM(c,i,d,1).
r_thrSenAbbrReachableCM(c,m) :- r_thrSenAbbrRootCM(d,1), thrSenAbbrReachableCM(c,m), MI(m,i), CICM(c,i,d,1).
r_CICM(c,i,d,1) :- r_thrSenAbbrRootCM(d,1), thrSenAbbrReachableCM(c,m), MI(m,i), CICM(c,i,d,1).

### thrSenAbbrReachableCM(c,m) :- thrSenAbbrRootCM(c,m).
r_thrSenAbbrRootCM(c,m) :- r_thrSenAbbrReachableCM(c,m), thrSenAbbrRootCM(c,m).

### thrSenAbbrReachableCM(d,n) :- thrSenAbbrCICM(_,_,d,n).
r_thrSenAbbrCICM(x16,x17,d,n) :- r_thrSenAbbrReachableCM(d,n), thrSenAbbrCICM(x16,x17,d,n).

### thrSenAbbrCICM(c,i,d,n) :- thrSenAbbrReachableCM(c,m), MI(m,i), CICM(c,i,d,n), n!=1.
r_thrSenAbbrReachableCM(c,m) :- r_thrSenAbbrCICM(c,i,d,n), thrSenAbbrReachableCM(c,m), MI(m,i), CICM(c,i,d,n), n!=1.
r_CICM(c,i,d,n) :- r_thrSenAbbrCICM(c,i,d,n), thrSenAbbrReachableCM(c,m), MI(m,i), CICM(c,i,d,n), n!=1.

### threadDCM(b,c,1) :- threadDHM(b,h,1), reachableCM(c,1), MmethArg(1,0,v), VCA(v,c,o), CH(o,h).
r_reachableCM(c,1) :- r_threadDCM(b,c,1), threadDHM(b,h,1), reachableCM(c,1), MmethArg(1,0,v), VCA(v,c,o), CH(o,h).
r_VCA(v,c,o) :- r_threadDCM(b,c,1), threadDHM(b,h,1), reachableCM(c,1), MmethArg(1,0,v), VCA(v,c,o), CH(o,h).
r_CH(o,h) :- r_threadDCM(b,c,1), threadDHM(b,h,1), reachableCM(c,1), MmethArg(1,0,v), VCA(v,c,o), CH(o,h).

### reachableTCMZ(t,c,m) :- threadDCM(t,c,m).
r_threadDCM(t,c,m) :- r_reachableTCMZ(t,c,m), threadDCM(t,c,m).

### reachableTCMZ(t,d,n) :- reachableTCMZ(t,c,m), MI(m,i), thrSenAbbrCICM(c,i,d,n).
r_reachableTCMZ(t,c,m) :- r_reachableTCMZ(t,d,n), reachableTCMZ(t,c,m), MI(m,i), thrSenAbbrCICM(c,i,d,n).
r_thrSenAbbrCICM(c,i,d,n) :- r_reachableTCMZ(t,d,n), reachableTCMZ(t,c,m), MI(m,i), thrSenAbbrCICM(c,i,d,n).

### reachableTCE(t,c,e) :- reachableTCMZ(t,c,m), ME(m,e).
r_reachableTCMZ(t,c,m) :- r_reachableTCE(t,c,e), reachableTCMZ(t,c,m), ME(m,e).

### startingRaceHext(t1,c1,e1,t2,c2,e2) :- inQueryEE(e1,e2), reachableTCE(t1,c1,e1), reachableTCE(t2,c2,e2).
r_reachableTCE(t1,c1,e1) :- r_startingRaceHext(t1,c1,e1,t2,c2,e2), inQueryEE(e1,e2), reachableTCE(t1,c1,e1), reachableTCE(t2,c2,e2).
r_reachableTCE(t2,c2,e2) :- r_startingRaceHext(t1,c1,e1,t2,c2,e2), inQueryEE(e1,e2), reachableTCE(t1,c1,e1), reachableTCE(t2,c2,e2).

### startingRaceHext(t1,c1,e1,t2,c2,e2) :- inQueryEE(e1,e2), reachableTCE(t1,c1,e1), reachableTCE(t2,c2,e2), e1=e2, c1<c2.
r_reachableTCE(t1,c1,e1) :- r_startingRaceHext(t1,c1,e1,t2,c2,e2), inQueryEE(e1,e2), reachableTCE(t1,c1,e1), reachableTCE(t2,c2,e2), e1=e2, c1<c2.
r_reachableTCE(t2,c2,e2) :- r_startingRaceHext(t1,c1,e1,t2,c2,e2), inQueryEE(e1,e2), reachableTCE(t1,c1,e1), reachableTCE(t2,c2,e2), e1=e2, c1<c2.

### startingRaceHext(t1,c1,e1,t2,c2,e2) :- inQueryEE(e1,e2), reachableTCE(t1,c1,e1), reachableTCE(t2,c2,e2), e1=e2, c1=c2, t1<=t2.
r_reachableTCE(t1,c1,e1) :- r_startingRaceHext(t1,c1,e1,t2,c2,e2), inQueryEE(e1,e2), reachableTCE(t1,c1,e1), reachableTCE(t2,c2,e2), e1=e2, c1=c2, t1<=t2.
r_reachableTCE(t2,c2,e2) :- r_startingRaceHext(t1,c1,e1,t2,c2,e2), inQueryEE(e1,e2), reachableTCE(t1,c1,e1), reachableTCE(t2,c2,e2), e1=e2, c1=c2, t1<=t2.

### statE(e) :- EF(e,f), statF(f).

### CEC(c,e,o) :- EV(e,v), VCA(v,c,o), escA(o).
r_VCA(v,c,o) :- r_CEC(c,e,o), EV(e,v), VCA(v,c,o), escA(o).
r_escA(o) :- r_CEC(c,e,o), EV(e,v), VCA(v,c,o), escA(o).

### escapingRaceHext(t1,c1,e1,t2,c2,e2) :- startingRaceHext(t1,c1,e1,t2,c2,e2), CEC(c1,e1,o), CEC(c2,e2,o).
r_startingRaceHext(t1,c1,e1,t2,c2,e2) :- r_escapingRaceHext(t1,c1,e1,t2,c2,e2), startingRaceHext(t1,c1,e1,t2,c2,e2), CEC(c1,e1,o), CEC(c2,e2,o).
r_CEC(c1,e1,o) :- r_escapingRaceHext(t1,c1,e1,t2,c2,e2), startingRaceHext(t1,c1,e1,t2,c2,e2), CEC(c1,e1,o), CEC(c2,e2,o).
r_CEC(c2,e2,o) :- r_escapingRaceHext(t1,c1,e1,t2,c2,e2), startingRaceHext(t1,c1,e1,t2,c2,e2), CEC(c1,e1,o), CEC(c2,e2,o).

### escapingRaceHext(t1,c1,e1,t2,c2,e2) :- startingRaceHext(t1,c1,e1,t2,c2,e2), statE(e1), statE(e2).
r_startingRaceHext(t1,c1,e1,t2,c2,e2) :- r_escapingRaceHext(t1,c1,e1,t2,c2,e2), startingRaceHext(t1,c1,e1,t2,c2,e2), statE(e1), statE(e2).
r_statE(e1) :- r_escapingRaceHext(t1,c1,e1,t2,c2,e2), startingRaceHext(t1,c1,e1,t2,c2,e2), statE(e1), statE(e2).
r_statE(e2) :- r_escapingRaceHext(t1,c1,e1,t2,c2,e2), startingRaceHext(t1,c1,e1,t2,c2,e2), statE(e1), statE(e2).

### NonForkPMcs(c,p,d,m) :- CICM(c,i,d,m), m!=1, PI(p,i).
r_CICM(c,i,d,m) :- r_NonForkPMcs(c,p,d,m), CICM(c,i,d,m), m!=1, PI(p,i).

### NonForkPHcs(c,p,d,h) :- NonForkPMcs(c,p,d,m), MPhead(m,h).
r_NonForkPMcs(c,p,d,m) :- r_NonForkPHcs(c,p,d,h), NonForkPMcs(c,p,d,m), MPhead(m,h).

### NonForkPTcs(c,p,d,t) :- NonForkPMcs(c,p,d,m), MPtail(m,t).
r_NonForkPMcs(c,p,d,m) :- r_NonForkPTcs(c,p,d,t), NonForkPMcs(c,p,d,m), MPtail(m,t).

### ForkPMcs(c,p,d) :- CICM(c,i,d,1), PI(p,i).
r_CICM(c,i,d,1) :- r_ForkPMcs(c,p,d), CICM(c,i,d,1), PI(p,i).

### ForkPHcs(c,p,d,h) :- ForkPMcs(c,p,d), MPhead(1,h).
r_ForkPMcs(c,p,d) :- r_ForkPHcs(c,p,d,h), ForkPMcs(c,p,d), MPhead(1,h).

### threadDC(t,c) :- threadDCM(t,c,1).
r_threadDCM(t,c,1) :- r_threadDC(t,c), threadDCM(t,c,1).

### PathEdgeZ(c,q,t,t1,t2) :- PathEdgeZ(c,p,t,t1,t2), PP(p,q).
r_PathEdgeZ(c,p,t,t1,t2) :- r_PathEdgeZ(c,q,t,t1,t2), PathEdgeZ(c,p,t,t1,t2), PP(p,q).

### PathEdgeZ(d,q,t,t1,t2) :- NonForkPHcs(c,p,d,q), PathEdgeZ(c,p,t,_,t2), t1=t2.
r_NonForkPHcs(c,p,d,q) :- r_PathEdgeZ(d,q,t,t1,t2), NonForkPHcs(c,p,d,q), PathEdgeZ(c,p,t,_,t2), t1=t2.
r_PathEdgeZ(c,p,t,x18,t2) :- r_PathEdgeZ(d,q,t,t1,t2), NonForkPHcs(c,p,d,q), PathEdgeZ(c,p,t,x18,t2), t1=t2.

### SummEdgeZ(c,p,t,t1,t2) :- NonForkPTcs(c,p,d,q), PathEdgeZ(d,q,t,t1,t2).
r_NonForkPTcs(c,p,d,q) :- r_SummEdgeZ(c,p,t,t1,t2), NonForkPTcs(c,p,d,q), PathEdgeZ(d,q,t,t1,t2).
r_PathEdgeZ(d,q,t,t1,t2) :- r_SummEdgeZ(c,p,t,t1,t2), NonForkPTcs(c,p,d,q), PathEdgeZ(d,q,t,t1,t2).

### PathEdgeZ(c,r,t,t1,t3) :- SummEdgeZ(c,p,t,t2,t3), PathEdgeZ(c,p,t,t1,t2), PP(p,r).
r_SummEdgeZ(c,p,t,t2,t3) :- r_PathEdgeZ(c,r,t,t1,t3), SummEdgeZ(c,p,t,t2,t3), PathEdgeZ(c,p,t,t1,t2), PP(p,r).
r_PathEdgeZ(c,p,t,t1,t2) :- r_PathEdgeZ(c,r,t,t1,t3), SummEdgeZ(c,p,t,t2,t3), PathEdgeZ(c,p,t,t1,t2), PP(p,r).

### PathEdgeZ(c,r,t,t1,t2) :- ForkPMcs(c,p,d), PathEdgeZ(c,p,t,t1,_), PP(p,r), threadDC(t2,d).
r_ForkPMcs(c,p,d) :- r_PathEdgeZ(c,r,t,t1,t2), ForkPMcs(c,p,d), PathEdgeZ(c,p,t,t1,_), PP(p,r), threadDC(t2,d).
r_PathEdgeZ(c,p,t,t1,x19) :- r_PathEdgeZ(c,r,t,t1,t2), ForkPMcs(c,p,d), PathEdgeZ(c,p,t,t1,x19), PP(p,r), threadDC(t2,d).
r_threadDC(t2,d) :- r_PathEdgeZ(c,r,t,t1,t2), ForkPMcs(c,p,d), PathEdgeZ(c,p,t,t1,_), PP(p,r), threadDC(t2,d).

### PathEdgeZ(c,r,t,t1,t3) :- ForkPMcs(c,p,d), PathEdgeZ(c,p,t,t1,_), PP(p,r), threadDC(t2,d), PathEdgeZ(d,q,t2,0,t3), MPtail(1,q).
r_ForkPMcs(c,p,d) :- r_PathEdgeZ(c,r,t,t1,t3), ForkPMcs(c,p,d), PathEdgeZ(c,p,t,t1,_), PP(p,r), threadDC(t2,d), PathEdgeZ(d,q,t2,0,t3), MPtail(1,q).
r_PathEdgeZ(c,p,t,t1,x20) :- r_PathEdgeZ(c,r,t,t1,t3), ForkPMcs(c,p,d), PathEdgeZ(c,p,t,t1,x20), PP(p,r), threadDC(t2,d), PathEdgeZ(d,q,t2,0,t3), MPtail(1,q).
r_threadDC(t2,d) :- r_PathEdgeZ(c,r,t,t1,t3), ForkPMcs(c,p,d), PathEdgeZ(c,p,t,t1,_), PP(p,r), threadDC(t2,d), PathEdgeZ(d,q,t2,0,t3), MPtail(1,q).
r_PathEdgeZ(d,q,t2,0,t3) :- r_PathEdgeZ(c,r,t,t1,t3), ForkPMcs(c,p,d), PathEdgeZ(c,p,t,t1,_), PP(p,r), threadDC(t2,d), PathEdgeZ(d,q,t2,0,t3), MPtail(1,q).

### PathEdgeZ(d,h,x,y,z) :- ForkPHcs(c,p,d,h), PathEdgeZ(c,p,y,_,_), threadDC(x,d), z=y.
r_ForkPHcs(c,p,d,h) :- r_PathEdgeZ(d,h,x,y,z), ForkPHcs(c,p,d,h), PathEdgeZ(c,p,y,_,_), threadDC(x,d), z=y.
r_PathEdgeZ(c,p,y,x21,x22) :- r_PathEdgeZ(d,h,x,y,z), ForkPHcs(c,p,d,h), PathEdgeZ(c,p,y,x21,x22), threadDC(x,d), z=y.
r_threadDC(x,d) :- r_PathEdgeZ(d,h,x,y,z), ForkPHcs(c,p,d,h), PathEdgeZ(c,p,y,_,_), threadDC(x,d), z=y.

### PathEdgeZ(d,h,x,y,z) :- ForkPHcs(c,p,d,h), PathEdgeZ(c,p,_,_,y), threadDC(x,d), z=y.
r_ForkPHcs(c,p,d,h) :- r_PathEdgeZ(d,h,x,y,z), ForkPHcs(c,p,d,h), PathEdgeZ(c,p,_,_,y), threadDC(x,d), z=y.
r_PathEdgeZ(c,p,x23,x24,y) :- r_PathEdgeZ(d,h,x,y,z), ForkPHcs(c,p,d,h), PathEdgeZ(c,p,x23,x24,y), threadDC(x,d), z=y.
r_threadDC(x,d) :- r_PathEdgeZ(d,h,x,y,z), ForkPHcs(c,p,d,h), PathEdgeZ(c,p,_,_,y), threadDC(x,d), z=y.

### PathEdgeZ(e,h,x,y,z) :- ForkPHcs(c,p,d,h), PathEdgeZ(c,p,_,_,x), threadDC(x,e), threadDC(y,d), z=y.
r_ForkPHcs(c,p,d,h) :- r_PathEdgeZ(e,h,x,y,z), ForkPHcs(c,p,d,h), PathEdgeZ(c,p,_,_,x), threadDC(x,e), threadDC(y,d), z=y.
r_PathEdgeZ(c,p,x25,x26,x) :- r_PathEdgeZ(e,h,x,y,z), ForkPHcs(c,p,d,h), PathEdgeZ(c,p,x25,x26,x), threadDC(x,e), threadDC(y,d), z=y.
r_threadDC(x,e) :- r_PathEdgeZ(e,h,x,y,z), ForkPHcs(c,p,d,h), PathEdgeZ(c,p,_,_,x), threadDC(x,e), threadDC(y,d), z=y.
r_threadDC(y,d) :- r_PathEdgeZ(e,h,x,y,z), ForkPHcs(c,p,d,h), PathEdgeZ(c,p,_,_,x), threadDC(x,e), threadDC(y,d), z=y.

### mhpZ(c,p,t1,t2) :- PathEdgeZ(c,p,t1,_,t2), t1!=0, t2!=0.
r_PathEdgeZ(c,p,t1,x27,t2) :- r_mhpZ(c,p,t1,t2), PathEdgeZ(c,p,t1,x27,t2), t1!=0, t2!=0.

### mheZ(c,e,t1,t2) :- mhpZ(c,p,t1,t2), PE(p,e).
r_mhpZ(c,p,t1,t2) :- r_mheZ(c,e,t1,t2), mhpZ(c,p,t1,t2), PE(p,e).

### parallelRaceHext(t1,c1,e1,t2,c2,e2) :- escapingRaceHext(t1,c1,e1,t2,c2,e2), mheZ(c1,e1,t1,t2), mheZ(c2,e2,t2,t1).
r_escapingRaceHext(t1,c1,e1,t2,c2,e2) :- r_parallelRaceHext(t1,c1,e1,t2,c2,e2), escapingRaceHext(t1,c1,e1,t2,c2,e2), mheZ(c1,e1,t1,t2), mheZ(c2,e2,t2,t1).
r_mheZ(c1,e1,t1,t2) :- r_parallelRaceHext(t1,c1,e1,t2,c2,e2), escapingRaceHext(t1,c1,e1,t2,c2,e2), mheZ(c1,e1,t1,t2), mheZ(c2,e2,t2,t1).
r_mheZ(c2,e2,t2,t1) :- r_parallelRaceHext(t1,c1,e1,t2,c2,e2), escapingRaceHext(t1,c1,e1,t2,c2,e2), mheZ(c1,e1,t1,t2), mheZ(c2,e2,t2,t1).

### outQueryEE(e1,e2) :- parallelRaceHext(_,_,e1,_,_,e2).
r_parallelRaceHext(x28,x29,e1,x30,x31,e2) :- r_outQueryEE(e1,e2), parallelRaceHext(x28,x29,e1,x30,x31,e2).

### Base case
r_outQueryEE(e1:E,e2:E) :- outQueryEE(e1:E,e2:E).
