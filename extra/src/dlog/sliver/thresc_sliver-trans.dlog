### WARNING: do not edit this file directly since it is automatically generated and can be overwritten at any point.
# name=thresc-sliver-trans-dlog

.include "C.dom"
.include "E.dom"
.include "F.dom"
.include "H.dom"
.include "I.dom"
.include "M.dom"
.include "T.dom"
.include "V.dom"
.include "Z.dom"
.bddvarorder F0_I0xI1xM0xM1_T0_V0xV1_T1_H0xH1_C0xC1xC2xC3_Z0_E0xE1

HT(h:H0,t:T1) input
sub(t1:T1,t2:T0) input
MI(m:M,i:I) input
MH(m:M,h:H) input
MV(m:M,v:V) input
statIM(i:I,m:M) input
classT(t:T) input
staticTM(t:T,m:M) input
staticTF(t:T,f:F) input
clinitTM(t:T,m:M) input
IinvkArg(i:I0,n:Z0,v:V1) input
IinvkRet(i:I0,n:Z0,v:V0) input
MmethArg(m:M0,n:Z0,v:V0) input
VHfilter(v:V,h:H) input
objNewInstIH(i:I0,h:H0) input
objNewInstIM(i:I0,m:M0) input
conNewInstIH(i:I0,h:H0) input
conNewInstIM(i:I0,m:M0) input
aryNewInstIH(i:I0,h:H0) input
MobjValAsgnInst(m:M,l:V,h:H)     input
MobjVarAsgnInst(m:M,l:V,r:V)     input
MgetInstFldInst(m:M,l:V,b:V,f:F) input
MputInstFldInst(m:M,b:V,f:F,r:V) input
MgetStatFldInst(m:M,l:V,f:F)     input
MputStatFldInst(m:M,f:F,r:V)     input
IM(i:I,m:M) input
argIVMV(i:I0,u:V1,m:M0,v:V0) input
retIVMV(i:I0,u:V0,m:M0,v:V1) input
reachableT(t:T) input
CfromHC(cm:C,h:H,c:C) input
r_CfromHC(cm:C,h:H,c:C) input # track
CfromIC(cm:C,i:I,c:C) input
r_CfromIC(cm:C,i:I,c:C) input # track
HfromC(h:H,c:C) input
objI(i:I) input
reachableCI(c:C,i:I) input
r_reachableCI(c:C,i:I) input # track
reachableCM(c:C,m:M) input
r_reachableCM(c:C,m:M) input # track
VCfromVC(v1:V0,e1:C0,v2:V1,e2:C1) input
r_VCfromVC(v1:V,e1:C,v2:V,e2:C) input # track
CICM(ci:C,i:I,cm:C,m:M) input
r_CICM(ci:C,i:I,cm:C,m:M) input # track
VAfilter(v:V,a:C) input
r_VAfilter(v:V,a:C) input # track
VCA(v:V,e:C,a:C) input
r_VCA(v:V,e:C,a:C) input # track
FA(f:F,a:C) input
r_FA(f:F,a:C) input # track
AFA(a1:C,f:F,a2:C) input
r_AFA(a1:C,f:F,a2:C) input # track

### VAfilter(v,a) :- VHfilter(v,h), HfromC(h,a).

### reachableCM(0,m) :- clinitTM(t,m), reachableT(t).

### reachableCM(cm,m) :- CICM(_,_,cm,m).
# TRANS - t_CICM_reachableCM CICM reachableCM 0,1,2,3 2,3
t_CICM_reachableCM(x1:C,x2:I,cm:C,m:M) output
t_CICM_reachableCM(x1,x2,cm,m) :- r_reachableCM(cm,m), CICM(x1,x2,cm,m).

### reachableCI(c,i) :- reachableCM(c,m), MI(m,i).
# TRANS - t_reachableCM_reachableCI reachableCM reachableCI 0,1 0,2
t_reachableCM_reachableCI(c:C,m:M,i:I) output
t_reachableCM_reachableCI(c,m,i) :- r_reachableCI(c,i), reachableCM(c,m), MI(m,i).

### CICM(ci,i,cm,m) :- !objI(i), reachableCI(ci,i), IM(i,m), CfromIC(cm,i,ci).
# TRANS call t_reachableCI_CICM reachableCI CICM 0,1 0,1,2,3
t_reachableCI_CICM(ci:C,i:I,cm:C,m:M) output
t_reachableCI_CICM(ci,i,cm,m) :- r_CICM(ci,i,cm,m), !objI(i), reachableCI(ci,i), IM(i,m), CfromIC(cm,i,ci).
# TRANS call t_CfromIC_CICM CfromIC CICM 0,1,2 2,1,0,3
t_CfromIC_CICM(cm:C,i:I,ci:C,m:M) output
t_CfromIC_CICM(cm,i,ci,m) :- r_CICM(ci,i,cm,m), !objI(i), reachableCI(ci,i), IM(i,m), CfromIC(cm,i,ci).

### CICM(ci,i,cm,m) :- objI(i), reachableCI(ci,i), IM(i,m), !statIM(i,m), IinvkArg(i,0,v), VCA(v,ci,cm).
# TRANS callI t_reachableCI_CICM1 reachableCI CICM 0,1 0,1,2,3
t_reachableCI_CICM1(ci:C,i:I,cm:C,m:M) output
t_reachableCI_CICM1(ci,i,cm,m) :- r_CICM(ci,i,cm,m), objI(i), reachableCI(ci,i), IM(i,m), !statIM(i,m), IinvkArg(i,0,v), VCA(v,ci,cm).
# TRANS callI t_VCA_CICM VCA CICM 0,1,2 1,3,2,4
t_VCA_CICM(v:V,ci:C,cm:C,i:I,m:M) output
t_VCA_CICM(v,ci,cm,i,m) :- r_CICM(ci,i,cm,m), objI(i), reachableCI(ci,i), IM(i,m), !statIM(i,m), IinvkArg(i,0,v), VCA(v,ci,cm).

### CICM(ci,i,cm,m) :- objI(i), reachableCI(ci,i), statIM(i,m), ci=cm.
# TRANS callS t_reachableCI_CICM2 reachableCI CICM 0,1 0,1,2,3
t_reachableCI_CICM2(ci:C,i:I,cm:C,m:M) output
t_reachableCI_CICM2(ci,i,cm,m) :- r_CICM(ci,i,cm,m), objI(i), reachableCI(ci,i), statIM(i,m), ci=cm.

### VCfromVC(vm,cm,vi,ci) :- argIVMV(i,vi,m,vm), CICM(ci,i,cm,m).
# TRANS arg t_CICM_VCfromVC CICM VCfromVC 0,1,2,3 4,2,5,0
t_CICM_VCfromVC(ci:C,i:I,cm:C,m:M,vm:V,vi:V) output
t_CICM_VCfromVC(ci,i,cm,m,vm,vi) :- r_VCfromVC(vm,cm,vi,ci), argIVMV(i,vi,m,vm), CICM(ci,i,cm,m).

### VCfromVC(vi,ci,vm,cm) :- retIVMV(i,vi,m,vm), CICM(ci,i,cm,m).
# TRANS ret t_CICM_VCfromVC1 CICM VCfromVC 0,1,2,3 4,0,5,2
t_CICM_VCfromVC1(ci:C,i:I,cm:C,m:M,vi:V,vm:V) output
t_CICM_VCfromVC1(ci,i,cm,m,vi,vm) :- r_VCfromVC(vi,ci,vm,cm), retIVMV(i,vi,m,vm), CICM(ci,i,cm,m).

### VCA(v,c,a) :- VCfromVC(v,c,vv,cc), VCA(vv,cc,a), VAfilter(v,a).
# TRANS - t_VCfromVC_VCA VCfromVC VCA 0,1,2,3 0,1,4
t_VCfromVC_VCA(v:V,c:C,vv:V,cc:C,a:C) output
t_VCfromVC_VCA(v,c,vv,cc,a) :- r_VCA(v,c,a), VCfromVC(v,c,vv,cc), VCA(vv,cc,a), VAfilter(v,a).
# TRANS - t_VCA_VCA VCA VCA 0,1,2 3,4,2
t_VCA_VCA(vv:V,cc:C,a:C,v:V,c:C) output
t_VCA_VCA(vv,cc,a,v,c) :- r_VCA(v,c,a), VCfromVC(v,c,vv,cc), VCA(vv,cc,a), VAfilter(v,a).
# TRANS - t_VAfilter_VCA VAfilter VCA 0,1 0,2,1
t_VAfilter_VCA(v:V,a:C,c:C) output
t_VAfilter_VCA(v,a,c) :- r_VCA(v,c,a), VCfromVC(v,c,vv,cc), VCA(vv,cc,a), VAfilter(v,a).

### VCA(l,c,a) :- reachableCM(c,m), MobjValAsgnInst(m,l,h), CfromHC(a,h,c).
# TRANS new t_reachableCM_VCA reachableCM VCA 0,1 2,0,3
t_reachableCM_VCA(c:C,m:M,l:V,a:C) output
t_reachableCM_VCA(c,m,l,a) :- r_VCA(l,c,a), reachableCM(c,m), MobjValAsgnInst(m,l,h), CfromHC(a,h,c).
# TRANS new t_CfromHC_VCA CfromHC VCA 0,1,2 3,2,0
t_CfromHC_VCA(a:C,h:H,c:C,l:V) output
t_CfromHC_VCA(a,h,c,l) :- r_VCA(l,c,a), reachableCM(c,m), MobjValAsgnInst(m,l,h), CfromHC(a,h,c).

### VCA(l,c,a) :- reachableCM(c,m), MobjVarAsgnInst(m,l,r), VCA(r,c,a), VAfilter(l,a).
# TRANS var t_reachableCM_VCA1 reachableCM VCA 0,1 2,0,3
t_reachableCM_VCA1(c:C,m:M,l:V,a:C) output
t_reachableCM_VCA1(c,m,l,a) :- r_VCA(l,c,a), reachableCM(c,m), MobjVarAsgnInst(m,l,r), VCA(r,c,a), VAfilter(l,a).
# TRANS var t_VCA_VCA1 VCA VCA 0,1,2 3,1,2
t_VCA_VCA1(r:V,c:C,a:C,l:V) output
t_VCA_VCA1(r,c,a,l) :- r_VCA(l,c,a), reachableCM(c,m), MobjVarAsgnInst(m,l,r), VCA(r,c,a), VAfilter(l,a).
# TRANS var t_VAfilter_VCA1 VAfilter VCA 0,1 0,2,1
t_VAfilter_VCA1(l:V,a:C,c:C) output
t_VAfilter_VCA1(l,a,c) :- r_VCA(l,c,a), reachableCM(c,m), MobjVarAsgnInst(m,l,r), VCA(r,c,a), VAfilter(l,a).

### VCA(l,c,aa) :- reachableCM(c,m), MgetInstFldInst(m,l,b,f), VCA(b,c,a), AFA(a,f,aa).
# TRANS hr t_reachableCM_VCA2 reachableCM VCA 0,1 2,0,3
t_reachableCM_VCA2(c:C,m:M,l:V,aa:C) output
t_reachableCM_VCA2(c,m,l,aa) :- r_VCA(l,c,aa), reachableCM(c,m), MgetInstFldInst(m,l,b,f), VCA(b,c,a), AFA(a,f,aa).
# TRANS hr t_VCA_VCA2 VCA VCA 0,1,2 3,1,4
t_VCA_VCA2(b:V,c:C,a:C,l:V,aa:C) output
t_VCA_VCA2(b,c,a,l,aa) :- r_VCA(l,c,aa), reachableCM(c,m), MgetInstFldInst(m,l,b,f), VCA(b,c,a), AFA(a,f,aa).
# TRANS hr t_AFA_VCA AFA VCA 0,1,2 3,4,2
t_AFA_VCA(a:C,f:F,aa:C,l:V,c:C) output
t_AFA_VCA(a,f,aa,l,c) :- r_VCA(l,c,aa), reachableCM(c,m), MgetInstFldInst(m,l,b,f), VCA(b,c,a), AFA(a,f,aa).

### VCA(l,c,a) :- reachableCM(c,m), MgetStatFldInst(m,l,f), FA(f,a).
# TRANS gr t_reachableCM_VCA3 reachableCM VCA 0,1 2,0,3
t_reachableCM_VCA3(c:C,m:M,l:V,a:C) output
t_reachableCM_VCA3(c,m,l,a) :- r_VCA(l,c,a), reachableCM(c,m), MgetStatFldInst(m,l,f), FA(f,a).
# TRANS gr t_FA_VCA FA VCA 0,1 2,3,1
t_FA_VCA(f:F,a:C,l:V,c:C) output
t_FA_VCA(f,a,l,c) :- r_VCA(l,c,a), reachableCM(c,m), MgetStatFldInst(m,l,f), FA(f,a).

### AFA(a,f,aa) :- reachableCM(c,m), MputInstFldInst(m,b,f,r), VCA(b,c,a), VCA(r,c,aa).
# TRANS hw t_reachableCM_AFA reachableCM AFA 0,1 2,3,4
t_reachableCM_AFA(c:C,m:M,a:C,f:F,aa:C) output
t_reachableCM_AFA(c,m,a,f,aa) :- r_AFA(a,f,aa), reachableCM(c,m), MputInstFldInst(m,b,f,r), VCA(b,c,a), VCA(r,c,aa).
# TRANS hw t_VCA_AFA VCA AFA 0,1,2 2,3,4
t_VCA_AFA(b:V,c:C,a:C,f:F,aa:C) output
t_VCA_AFA(b,c,a,f,aa) :- r_AFA(a,f,aa), reachableCM(c,m), MputInstFldInst(m,b,f,r), VCA(b,c,a), VCA(r,c,aa).
# TRANS hw t_VCA_AFA1 VCA AFA 0,1,2 3,4,2
t_VCA_AFA1(r:V,c:C,aa:C,a:C,f:F) output
t_VCA_AFA1(r,c,aa,a,f) :- r_AFA(a,f,aa), reachableCM(c,m), MputInstFldInst(m,b,f,r), VCA(b,c,a), VCA(r,c,aa).

### FA(f,a) :- reachableCM(c,m), MputStatFldInst(m,f,r), VCA(r,c,a).
# TRANS gw t_reachableCM_FA reachableCM FA 0,1 2,3
t_reachableCM_FA(c:C,m:M,f:F,a:C) output
t_reachableCM_FA(c,m,f,a) :- r_FA(f,a), reachableCM(c,m), MputStatFldInst(m,f,r), VCA(r,c,a).
# TRANS gw t_VCA_FA VCA FA 0,1,2 3,2
t_VCA_FA(r:V,c:C,a:C,f:F) output
t_VCA_FA(r,c,a,f) :- r_FA(f,a), reachableCM(c,m), MputStatFldInst(m,f,r), VCA(r,c,a).

### reachableCM(c,m) :- reachableCI(c,i), objNewInstIM(i,m).
# TRANS - t_reachableCI_reachableCM reachableCI reachableCM 0,1 0,2
t_reachableCI_reachableCM(c:C,i:I,m:M) output
t_reachableCI_reachableCM(c,i,m) :- r_reachableCM(c,m), reachableCI(c,i), objNewInstIM(i,m).

### reachableCM(c,m) :- reachableCI(c,i), conNewInstIM(i,m).
# TRANS - t_reachableCI_reachableCM1 reachableCI reachableCM 0,1 0,2
t_reachableCI_reachableCM1(c:C,i:I,m:M) output
t_reachableCI_reachableCM1(c,i,m) :- r_reachableCM(c,m), reachableCI(c,i), conNewInstIM(i,m).

### VCA(v,c,o) :- reachableCI(c,i), objNewInstIM(i,m), MmethArg(m,0,v), objNewInstIH(i,h), CfromHC(o,h,c).
# TRANS - t_reachableCI_VCA reachableCI VCA 0,1 2,0,3
t_reachableCI_VCA(c:C,i:I,v:V,o:C) output
t_reachableCI_VCA(c,i,v,o) :- r_VCA(v,c,o), reachableCI(c,i), objNewInstIM(i,m), MmethArg(m,0,v), objNewInstIH(i,h), CfromHC(o,h,c).
# TRANS - t_CfromHC_VCA1 CfromHC VCA 0,1,2 3,2,0
t_CfromHC_VCA1(o:C,h:H,c:C,v:V) output
t_CfromHC_VCA1(o,h,c,v) :- r_VCA(v,c,o), reachableCI(c,i), objNewInstIM(i,m), MmethArg(m,0,v), objNewInstIH(i,h), CfromHC(o,h,c).

### VCA(v,c,o) :- reachableCI(c,i), objNewInstIH(i,h), IinvkRet(i,0,v), CfromHC(o,h,c).
# TRANS - t_reachableCI_VCA1 reachableCI VCA 0,1 2,0,3
t_reachableCI_VCA1(c:C,i:I,v:V,o:C) output
t_reachableCI_VCA1(c,i,v,o) :- r_VCA(v,c,o), reachableCI(c,i), objNewInstIH(i,h), IinvkRet(i,0,v), CfromHC(o,h,c).
# TRANS - t_CfromHC_VCA2 CfromHC VCA 0,1,2 3,2,0
t_CfromHC_VCA2(o:C,h:H,c:C,v:V) output
t_CfromHC_VCA2(o,h,c,v) :- r_VCA(v,c,o), reachableCI(c,i), objNewInstIH(i,h), IinvkRet(i,0,v), CfromHC(o,h,c).

### VCA(v,c,o2) :- reachableCI(c,i), conNewInstIM(i,m), IinvkArg(i,1,u), MmethArg(m,1,v), VCA(u,c,o), AFA(o,0,o2).
# TRANS - t_reachableCI_VCA2 reachableCI VCA 0,1 2,0,3
t_reachableCI_VCA2(c:C,i:I,v:V,o2:C) output
t_reachableCI_VCA2(c,i,v,o2) :- r_VCA(v,c,o2), reachableCI(c,i), conNewInstIM(i,m), IinvkArg(i,1,u), MmethArg(m,1,v), VCA(u,c,o), AFA(o,0,o2).
# TRANS - t_VCA_VCA3 VCA VCA 0,1,2 3,1,4
t_VCA_VCA3(u:V,c:C,o:C,v:V,o2:C) output
t_VCA_VCA3(u,c,o,v,o2) :- r_VCA(v,c,o2), reachableCI(c,i), conNewInstIM(i,m), IinvkArg(i,1,u), MmethArg(m,1,v), VCA(u,c,o), AFA(o,0,o2).
# TRANS - t_AFA_VCA1 AFA VCA 0,1,2 3,4,2
t_AFA_VCA1(o:C,0:F,o2:C,v:V,c:C) output
t_AFA_VCA1(o,0,o2,v,c) :- r_VCA(v,c,o2), reachableCI(c,i), conNewInstIM(i,m), IinvkArg(i,1,u), MmethArg(m,1,v), VCA(u,c,o), AFA(o,0,o2).

### VCA(v,c,o) :- reachableCI(c,i), conNewInstIM(i,m), MmethArg(m,0,v), conNewInstIH(i,h), CfromHC(o,h,c).
# TRANS - t_reachableCI_VCA3 reachableCI VCA 0,1 2,0,3
t_reachableCI_VCA3(c:C,i:I,v:V,o:C) output
t_reachableCI_VCA3(c,i,v,o) :- r_VCA(v,c,o), reachableCI(c,i), conNewInstIM(i,m), MmethArg(m,0,v), conNewInstIH(i,h), CfromHC(o,h,c).
# TRANS - t_CfromHC_VCA3 CfromHC VCA 0,1,2 3,2,0
t_CfromHC_VCA3(o:C,h:H,c:C,v:V) output
t_CfromHC_VCA3(o,h,c,v) :- r_VCA(v,c,o), reachableCI(c,i), conNewInstIM(i,m), MmethArg(m,0,v), conNewInstIH(i,h), CfromHC(o,h,c).

### VCA(v,c,o) :- reachableCI(c,i), conNewInstIH(i,h), IinvkRet(i,0,v), CfromHC(o,h,c).
# TRANS - t_reachableCI_VCA4 reachableCI VCA 0,1 2,0,3
t_reachableCI_VCA4(c:C,i:I,v:V,o:C) output
t_reachableCI_VCA4(c,i,v,o) :- r_VCA(v,c,o), reachableCI(c,i), conNewInstIH(i,h), IinvkRet(i,0,v), CfromHC(o,h,c).
# TRANS - t_CfromHC_VCA4 CfromHC VCA 0,1,2 3,2,0
t_CfromHC_VCA4(o:C,h:H,c:C,v:V) output
t_CfromHC_VCA4(o,h,c,v) :- r_VCA(v,c,o), reachableCI(c,i), conNewInstIH(i,h), IinvkRet(i,0,v), CfromHC(o,h,c).

### VCA(v,c,o) :- reachableCI(c,i), aryNewInstIH(i,h), IinvkRet(i,0,v), CfromHC(o,h,c).
# TRANS - t_reachableCI_VCA5 reachableCI VCA 0,1 2,0,3
t_reachableCI_VCA5(c:C,i:I,v:V,o:C) output
t_reachableCI_VCA5(c,i,v,o) :- r_VCA(v,c,o), reachableCI(c,i), aryNewInstIH(i,h), IinvkRet(i,0,v), CfromHC(o,h,c).
# TRANS - t_CfromHC_VCA5 CfromHC VCA 0,1,2 3,2,0
t_CfromHC_VCA5(o:C,h:H,c:C,v:V) output
t_CfromHC_VCA5(o,h,c,v) :- r_VCA(v,c,o), reachableCI(c,i), aryNewInstIH(i,h), IinvkRet(i,0,v), CfromHC(o,h,c).
inQuery(e1:E,e2:E) input
EV(e:E,v:V) input
escA(a:C) input
r_escA(a:C) input # track
outQuery(e1:E,e2:E) input
r_outQuery(e1:E,e2:E) input # track

### escA(a) :- FA(_,a).
# TRANS - t_FA_escA FA escA 0,1 1
t_FA_escA(x3:F,a:C) output
t_FA_escA(x3,a) :- r_escA(a), FA(x3,a).

### escA(a) :- reachableCM(c,1), MmethArg(1,0,v), VCA(v,c,a).
# TRANS ts t_reachableCM_escA reachableCM escA 0,1 2
t_reachableCM_escA(c:C,1:M,a:C) output
t_reachableCM_escA(c,1,a) :- r_escA(a), reachableCM(c,1), MmethArg(1,0,v), VCA(v,c,a).
# TRANS ts t_VCA_escA VCA escA 0,1,2 2
t_VCA_escA(v:V,c:C,a:C) output
t_VCA_escA(v,c,a) :- r_escA(a), reachableCM(c,1), MmethArg(1,0,v), VCA(v,c,a).

### escA(a) :- escA(b), AFA(b,_,a).
# TRANS - t_escA_escA escA escA 0 1
t_escA_escA(b:C,a:C) output
t_escA_escA(b,a) :- r_escA(a), escA(b), AFA(b,_,a).
# TRANS - t_AFA_escA AFA escA 0,1,2 2
t_AFA_escA(b:C,x4:F,a:C) output
t_AFA_escA(b,x4,a) :- r_escA(a), escA(b), AFA(b,x4,a).

### outQuery(e,ee) :- inQuery(e,ee), e=ee, EV(e,v), VCA(v,_,a), escA(a).
# TRANS - t_VCA_outQuery VCA outQuery 0,1,2 3,4
t_VCA_outQuery(v:V,x5:C,a:C,e:E,ee:E) output
t_VCA_outQuery(v,x5,a,e,ee) :- r_outQuery(e,ee), inQuery(e,ee), e=ee, EV(e,v), VCA(v,x5,a), escA(a).
# TRANS - t_escA_outQuery escA outQuery 0 1,2
t_escA_outQuery(a:C,e:E,ee:E) output
t_escA_outQuery(a,e,ee) :- r_outQuery(e,ee), inQuery(e,ee), e=ee, EV(e,v), VCA(v,_,a), escA(a).
