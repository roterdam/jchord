### WARNING: do not edit this file directly since it is automatically generated and can be overwritten at any point.
# name=thresc-sliver-relevant-dlog

.include "C.dom"
.include "E.dom"
.include "F.dom"
.include "H.dom"
.include "I.dom"
.include "M.dom"
.include "T.dom"
.include "V.dom"
.include "Z.dom"
.bddvarorder F0_I0xI1xM0xM1_T0_V0xV1_T1_H0xH1_C0xC1xC2xC3_Z0_E0xE1

HT(h:H0,t:T1) input
sub(t1:T1,t2:T0) input
MI(m:M,i:I) input
MH(m:M,h:H) input
MV(m:M,v:V) input
statIM(i:I,m:M) input
classT(t:T) input
staticTM(t:T,m:M) input
staticTF(t:T,f:F) input
clinitTM(t:T,m:M) input
IinvkArg(i:I0,n:Z0,v:V1) input
VHfilter(v:V,h:H) input
MobjValAsgnInst(m:M,l:V,h:H)     input
MobjVarAsgnInst(m:M,l:V,r:V)     input
MgetInstFldInst(m:M,l:V,b:V,f:F) input
MputInstFldInst(m:M,b:V,f:F,r:V) input
MgetStatFldInst(m:M,l:V,f:F)     input
MputStatFldInst(m:M,f:F,r:V)     input
IM(i:I,m:M) input
argIVMV(i:I0,u:V1,m:M0,v:V0) input
retIVMV(i:I0,u:V0,m:M0,v:V1) input
reachableT(t:T) input
CfromHC(cm:C,h:H,c:C) input
r_CfromHC(cm:C,h:H,c:C) output # track
CfromIC(cm:C,i:I,c:C) input
r_CfromIC(cm:C,i:I,c:C) output # track
HfromC(h:H,c:C) input
objI(i:I) input
reachableCI(c:C,i:I) input
r_reachableCI(c:C,i:I) output # track
reachableCM(c:C,m:M) input
r_reachableCM(c:C,m:M) output # track
VCfromVC(v1:V0,e1:C0,v2:V1,e2:C1) input
r_VCfromVC(v1:V,e1:C,v2:V,e2:C) output # track
CICM(ci:C,i:I,cm:C,m:M) input
r_CICM(ci:C,i:I,cm:C,m:M) output # track
VAfilter(v:V,a:C) input
r_VAfilter(v:V,a:C) output # track
VCA(v:V,e:C,a:C) input
r_VCA(v:V,e:C,a:C) output # track
FA(f:F,a:C) input
r_FA(f:F,a:C) output # track
AFA(a1:C,f:F,a2:C) input
r_AFA(a1:C,f:F,a2:C) output # track

### VAfilter(v,a) :- VHfilter(v,h), HfromC(h,a).

### reachableCM(0,m) :- clinitTM(t,m), reachableT(t).

### reachableCM(cm,m) :- CICM(_,_,cm,m).
r_CICM(x1,x2,cm,m) :- r_reachableCM(cm,m), CICM(x1,x2,cm,m).

### reachableCI(c,i) :- reachableCM(c,m), MI(m,i).
r_reachableCM(c,m) :- r_reachableCI(c,i), reachableCM(c,m), MI(m,i).

### CICM(ci,i,cm,m) :- !objI(i), reachableCI(ci,i), IM(i,m), CfromIC(cm,i,ci).
r_reachableCI(ci,i) :- r_CICM(ci,i,cm,m), !objI(i), reachableCI(ci,i), IM(i,m), CfromIC(cm,i,ci).
r_CfromIC(cm,i,ci) :- r_CICM(ci,i,cm,m), !objI(i), reachableCI(ci,i), IM(i,m), CfromIC(cm,i,ci).

### CICM(ci,i,cm,m) :- objI(i), reachableCI(ci,i), IM(i,m), !statIM(i,m), IinvkArg(i,0,v), VCA(v,ci,cm).
r_reachableCI(ci,i) :- r_CICM(ci,i,cm,m), objI(i), reachableCI(ci,i), IM(i,m), !statIM(i,m), IinvkArg(i,0,v), VCA(v,ci,cm).
r_VCA(v,ci,cm) :- r_CICM(ci,i,cm,m), objI(i), reachableCI(ci,i), IM(i,m), !statIM(i,m), IinvkArg(i,0,v), VCA(v,ci,cm).

### CICM(ci,i,cm,m) :- objI(i), reachableCI(ci,i), statIM(i,m), ci=cm.
r_reachableCI(ci,i) :- r_CICM(ci,i,cm,m), objI(i), reachableCI(ci,i), statIM(i,m), ci=cm.

### VCfromVC(vm,cm,vi,ci) :- argIVMV(i,vi,m,vm), CICM(ci,i,cm,m).
r_CICM(ci,i,cm,m) :- r_VCfromVC(vm,cm,vi,ci), argIVMV(i,vi,m,vm), CICM(ci,i,cm,m).

### VCfromVC(vi,ci,vm,cm) :- retIVMV(i,vi,m,vm), CICM(ci,i,cm,m).
r_CICM(ci,i,cm,m) :- r_VCfromVC(vi,ci,vm,cm), retIVMV(i,vi,m,vm), CICM(ci,i,cm,m).

### VCA(v,c,a) :- VCfromVC(v,c,vv,cc), VCA(vv,cc,a), VAfilter(v,a).
r_VCfromVC(v,c,vv,cc) :- r_VCA(v,c,a), VCfromVC(v,c,vv,cc), VCA(vv,cc,a), VAfilter(v,a).
r_VCA(vv,cc,a) :- r_VCA(v,c,a), VCfromVC(v,c,vv,cc), VCA(vv,cc,a), VAfilter(v,a).
r_VAfilter(v,a) :- r_VCA(v,c,a), VCfromVC(v,c,vv,cc), VCA(vv,cc,a), VAfilter(v,a).

### VCA(l,c,a) :- reachableCM(c,m), MobjValAsgnInst(m,l,h), CfromHC(a,h,c).
r_reachableCM(c,m) :- r_VCA(l,c,a), reachableCM(c,m), MobjValAsgnInst(m,l,h), CfromHC(a,h,c).
r_CfromHC(a,h,c) :- r_VCA(l,c,a), reachableCM(c,m), MobjValAsgnInst(m,l,h), CfromHC(a,h,c).

### VCA(l,c,a) :- reachableCM(c,m), MobjVarAsgnInst(m,l,r), VCA(r,c,a), VAfilter(l,a).
r_reachableCM(c,m) :- r_VCA(l,c,a), reachableCM(c,m), MobjVarAsgnInst(m,l,r), VCA(r,c,a), VAfilter(l,a).
r_VCA(r,c,a) :- r_VCA(l,c,a), reachableCM(c,m), MobjVarAsgnInst(m,l,r), VCA(r,c,a), VAfilter(l,a).
r_VAfilter(l,a) :- r_VCA(l,c,a), reachableCM(c,m), MobjVarAsgnInst(m,l,r), VCA(r,c,a), VAfilter(l,a).

### VCA(l,c,aa) :- reachableCM(c,m), MgetInstFldInst(m,l,b,f), VCA(b,c,a), AFA(a,f,aa).
r_reachableCM(c,m) :- r_VCA(l,c,aa), reachableCM(c,m), MgetInstFldInst(m,l,b,f), VCA(b,c,a), AFA(a,f,aa).
r_VCA(b,c,a) :- r_VCA(l,c,aa), reachableCM(c,m), MgetInstFldInst(m,l,b,f), VCA(b,c,a), AFA(a,f,aa).
r_AFA(a,f,aa) :- r_VCA(l,c,aa), reachableCM(c,m), MgetInstFldInst(m,l,b,f), VCA(b,c,a), AFA(a,f,aa).

### VCA(l,c,a) :- reachableCM(c,m), MgetStatFldInst(m,l,f), FA(f,a).
r_reachableCM(c,m) :- r_VCA(l,c,a), reachableCM(c,m), MgetStatFldInst(m,l,f), FA(f,a).
r_FA(f,a) :- r_VCA(l,c,a), reachableCM(c,m), MgetStatFldInst(m,l,f), FA(f,a).

### AFA(a,f,aa) :- reachableCM(c,m), MputInstFldInst(m,b,f,r), VCA(b,c,a), VCA(r,c,aa).
r_reachableCM(c,m) :- r_AFA(a,f,aa), reachableCM(c,m), MputInstFldInst(m,b,f,r), VCA(b,c,a), VCA(r,c,aa).
r_VCA(b,c,a) :- r_AFA(a,f,aa), reachableCM(c,m), MputInstFldInst(m,b,f,r), VCA(b,c,a), VCA(r,c,aa).
r_VCA(r,c,aa) :- r_AFA(a,f,aa), reachableCM(c,m), MputInstFldInst(m,b,f,r), VCA(b,c,a), VCA(r,c,aa).

### FA(f,a) :- reachableCM(c,m), MputStatFldInst(m,f,r), VCA(r,c,a).
r_reachableCM(c,m) :- r_FA(f,a), reachableCM(c,m), MputStatFldInst(m,f,r), VCA(r,c,a).
r_VCA(r,c,a) :- r_FA(f,a), reachableCM(c,m), MputStatFldInst(m,f,r), VCA(r,c,a).
inQuery(e1:E,e2:E) input
EV(e:E,v:V) input
MmethArg(m:M0,n:Z0,v:V0) input
escA(a:C) input
r_escA(a:C) output # track
outQuery(e1:E,e2:E) input
r_outQuery(e1:E,e2:E) output # track

### escA(a) :- FA(_,a).
r_FA(x3,a) :- r_escA(a), FA(x3,a).

### escA(a) :- reachableCM(c,1), MmethArg(1,0,v), VCA(v,c,a).
r_reachableCM(c,1) :- r_escA(a), reachableCM(c,1), MmethArg(1,0,v), VCA(v,c,a).
r_VCA(v,c,a) :- r_escA(a), reachableCM(c,1), MmethArg(1,0,v), VCA(v,c,a).

### escA(a) :- escA(b), AFA(b,_,a).
r_escA(b) :- r_escA(a), escA(b), AFA(b,_,a).
r_AFA(b,x4,a) :- r_escA(a), escA(b), AFA(b,x4,a).

### outQuery(e,ee) :- inQuery(e,ee), e=ee, EV(e,v), VCA(v,_,a), escA(a).
r_VCA(v,x5,a) :- r_outQuery(e,ee), inQuery(e,ee), e=ee, EV(e,v), VCA(v,x5,a), escA(a).
r_escA(a) :- r_outQuery(e,ee), inQuery(e,ee), e=ee, EV(e,v), VCA(v,_,a), escA(a).

### Base case
r_outQuery(e1:E,e2:E) :- outQuery(e1:E,e2:E).
