### WARNING: do not edit this file directly since it is automatically generated and can be overwritten at any point.
# name=race-classic-kcfa-relevant-dlog

.include "C.dom"
.include "D.dom"
.include "E.dom"
.include "F.dom"
.include "H.dom"
.include "I.dom"
.include "M.dom"
.include "P.dom"
.include "T.dom"
.include "V.dom"
.include "Z.dom"
.bddvarorder F0_D0xD1xD2xD3xD4_P0xP1xP2_I0xI1xM0xM1_T0_V0xV1_T1_H0xH1_C0xC1xC2xC3_Z0_E0xE1

HT(h:H0,t:T1) input
cha(n:M1,t:T1,m:M0) input
sub(t1:T1,t2:T0) input
MI(m:M,i:I) input
statIM(i:I,m:M) input
specIM(i:I,m:M) input
virtIM(i:I,m:M) input
MobjValAsgnInst(m:M,l:V,h:H) input
MobjVarAsgnInst(m:M,l:V,r:V) input
MgetInstFldInst(m:M,l:V,b:V,f:F) input
MputInstFldInst(m:M,b:V,f:F,r:V) input
MgetStatFldInst(m:M,l:V,f:F) input
MputStatFldInst(m:M,f:F,r:V) input
clsForNameIT(i:I0,t:T0) input
objNewInstIH(i:I0,h:H0) input
objNewInstIM(i:I0,m:M0) input
conNewInstIH(i:I0,h:H0) input
conNewInstIM(i:I0,m:M0) input
aryNewInstIH(i:I0,h:H0) input
RobjValAsgnInst(c:C,l:V,h:H) input
r_RobjValAsgnInst(c:C,l:V,h:H) output # track
RobjVarAsgnInst(c:C,l:V,r:V) input
r_RobjVarAsgnInst(c:C,l:V,r:V) output # track
RgetInstFldInst(c:C,l:V,b:V,f:F) input
r_RgetInstFldInst(c:C,l:V,b:V,f:F) output # track
RputInstFldInst(c:C,b:V,f:F,r:V) input
r_RputInstFldInst(c:C,b:V,f:F,r:V) output # track
RgetStatFldInst(c:C,l:V,f:F) input
r_RgetStatFldInst(c:C,l:V,f:F) output # track
RputStatFldInst(c:C,f:F,r:V) input
r_RputStatFldInst(c:C,f:F,r:V) output # track
classT(t:T) input
staticTM(t:T,m:M) input
staticTF(t:T,f:F) input
clinitTM(t:T,m:M) input
MmethArg(m:M0,n:Z0,v:V0) input
IinvkArg(i:I0,n:Z0,v:V1) input
IinvkArg0(i:I0,v:V1) input
IinvkRet(i:I0,n:Z0,v:V0) input
argCopy(i:I0,u:V1,m:M0,v:V0) input
retCopy(i:I0,u:V0,m:M0,v:V1) input
VCfilter(v:V,c:C) input
CC(c:C,d:C) input
CH(c:C,h:H) input
r_CH(c:C,h:H) output # track
CI(c:C,i:I) input
r_CI(c:C,i:I) output # track
epsilonM(m:M) input
kcfaSenM(m:M) input
epsilonV(v:V) input
IHM(i:I,h:H,m:M) input
r_IHM(i:I,h:H,m:M) output # track
reachableT(t:T) input
r_reachableT(t:T) output # track
kcfaDIC(c:C,i:I,c:C) input
r_kcfaDIC(c:C,i:I,c:C) output # track
DIC(c:C,i:I,c:C) input
r_DIC(c:C,i:I,c:C) output # track
DIH(c:C,i:I,h:H) input
r_DIH(c:C,i:I,h:H) output # track
DI(c:C,i:I) input
r_DI(c:C,i:I) output # track
DVDV(c:C0,u:V0,d:C1,v:V1) input
r_DVDV(c:C,u:V,d:C,v:V) output # track
ctxtInsIHM(i:I,h:H,m:M) input
r_ctxtInsIHM(i:I,h:H,m:M) output # track
kcfaSenIHM(i:I,h:H,m:M) input
r_kcfaSenIHM(i:I,h:H,m:M) output # track
ctxtInsSpecIM(i:I,m:M) input
r_ctxtInsSpecIM(i:I,m:M) output # track
kcfaSenSpecIM(i:I,m:M) input
r_kcfaSenSpecIM(i:I,m:M) output # track
ctxtInsStatIM(i:I,m:M) input
r_ctxtInsStatIM(i:I,m:M) output # track
kcfaSenStatIM(i:I,m:M) input
r_kcfaSenStatIM(i:I,m:M) output # track
reachableCI(c:C,i:I) input
r_reachableCI(c:C,i:I) output # track
reachableCM(c:C,m:M) input
r_reachableCM(c:C,m:M) output # track
rootCM(c:C,m:M) input
r_rootCM(c:C,m:M) output # track
CICM(c:C,i:I,d:C,m:M) input
r_CICM(c:C,i:I,d:C,m:M) output # track
CMCM(c:C,m:M,d:C,n:M) input
r_CMCM(c:C,m:M,d:C,n:M) output # track
DVC(c1:C,v:V,c2:C) input
r_DVC(c1:C,v:V,c2:C) output # track
CVC(c1:C,v:V,c2:C) input
r_CVC(c1:C,v:V,c2:C) output # track
FC(f:F,c:C) input
r_FC(f:F,c:C) output # track
CFC(c1:C,f:F,c2:C) input
r_CFC(c1:C,f:F,c2:C) output # track
CIC(c:C,i:I,d:C) input
r_CIC(c:C,i:I,d:C) output # track
CHC(c:C,h:H,d:C) input
r_CHC(c:C,h:H,d:C) output # track

### CIC(c,i,d) :- CC(c,d), CI(d,i).
r_CI(d,i) :- r_CIC(c,i,d), CC(c,d), CI(d,i).

### CHC(c,h,d) :- CC(c,d), CH(d,h).
r_CH(d,h) :- r_CHC(c,h,d), CC(c,d), CH(d,h).

### IHM(i,h,m2) :- virtIM(i,m1), HT(h,t), cha(m1,t,m2).

### ctxtInsIHM(i,h,m) :- IHM(i,h,m), epsilonM(m).
r_IHM(i,h,m) :- r_ctxtInsIHM(i,h,m), IHM(i,h,m), epsilonM(m).

### kcfaSenIHM(i,h,m) :- IHM(i,h,m), kcfaSenM(m).
r_IHM(i,h,m) :- r_kcfaSenIHM(i,h,m), IHM(i,h,m), kcfaSenM(m).

### kcfaSenSpecIM(i,m) :- specIM(i,m), kcfaSenM(m).

### ctxtInsSpecIM(i,m) :- specIM(i,m), epsilonM(m).

### kcfaSenStatIM(i,m) :- statIM(i,m), kcfaSenM(m).

### ctxtInsStatIM(i,m) :- statIM(i,m), epsilonM(m).

### reachableCM(0,m) :- clinitTM(t,m), reachableT(t).
r_reachableT(t) :- r_reachableCM(0,m), clinitTM(t,m), reachableT(t).

### reachableCM(c,m) :- CICM(_,_,c,m).
r_CICM(x1,x2,c,m) :- r_reachableCM(c,m), CICM(x1,x2,c,m).

### reachableCI(c,i) :- MI(m,i), reachableCM(c,m).
r_reachableCM(c,m) :- r_reachableCI(c,i), MI(m,i), reachableCM(c,m).

### DIC(c,i,o) :- IinvkArg0(i,v), DVC(c,v,o).
r_DVC(c,v,o) :- r_DIC(c,i,o), IinvkArg0(i,v), DVC(c,v,o).

### DIH(c,i,h) :- DIC(c,i,o), CH(o,h).
r_DIC(c,i,o) :- r_DIH(c,i,h), DIC(c,i,o), CH(o,h).
r_CH(o,h) :- r_DIH(c,i,h), DIC(c,i,o), CH(o,h).

### DI(c,i) :- DIH(c,i,_).
r_DIH(c,i,x3) :- r_DI(c,i), DIH(c,i,x3).

### kcfaDIC(0,i,d) :- CIC(0,i,d), MI(m,i), epsilonM(m).
r_CIC(0,i,d) :- r_kcfaDIC(0,i,d), CIC(0,i,d), MI(m,i), epsilonM(m).

### kcfaDIC(c,i,d) :- CIC(c,i,d), MI(m,i), kcfaSenM(m).
r_CIC(c,i,d) :- r_kcfaDIC(c,i,d), CIC(c,i,d), MI(m,i), kcfaSenM(m).

### CICM(c,i,0,m) :- reachableCI(c,i), ctxtInsIHM(i,h,m), DIH(c,i,h).
r_reachableCI(c,i) :- r_CICM(c,i,0,m), reachableCI(c,i), ctxtInsIHM(i,h,m), DIH(c,i,h).
r_ctxtInsIHM(i,h,m) :- r_CICM(c,i,0,m), reachableCI(c,i), ctxtInsIHM(i,h,m), DIH(c,i,h).
r_DIH(c,i,h) :- r_CICM(c,i,0,m), reachableCI(c,i), ctxtInsIHM(i,h,m), DIH(c,i,h).

### CICM(c,i,d,m) :- reachableCI(c,i), kcfaSenIHM(i,h,m), DIH(c,i,h), kcfaDIC(c,i,d).
r_reachableCI(c,i) :- r_CICM(c,i,d,m), reachableCI(c,i), kcfaSenIHM(i,h,m), DIH(c,i,h), kcfaDIC(c,i,d).
r_kcfaSenIHM(i,h,m) :- r_CICM(c,i,d,m), reachableCI(c,i), kcfaSenIHM(i,h,m), DIH(c,i,h), kcfaDIC(c,i,d).
r_DIH(c,i,h) :- r_CICM(c,i,d,m), reachableCI(c,i), kcfaSenIHM(i,h,m), DIH(c,i,h), kcfaDIC(c,i,d).
r_kcfaDIC(c,i,d) :- r_CICM(c,i,d,m), reachableCI(c,i), kcfaSenIHM(i,h,m), DIH(c,i,h), kcfaDIC(c,i,d).

### CICM(c,i,0,m) :- reachableCI(c,i), ctxtInsSpecIM(i,m), DI(c,i).
r_reachableCI(c,i) :- r_CICM(c,i,0,m), reachableCI(c,i), ctxtInsSpecIM(i,m), DI(c,i).
r_ctxtInsSpecIM(i,m) :- r_CICM(c,i,0,m), reachableCI(c,i), ctxtInsSpecIM(i,m), DI(c,i).
r_DI(c,i) :- r_CICM(c,i,0,m), reachableCI(c,i), ctxtInsSpecIM(i,m), DI(c,i).

### CICM(c,i,d,m) :- reachableCI(c,i), kcfaSenSpecIM(i,m), DI(c,i), kcfaDIC(c,i,d).
r_reachableCI(c,i) :- r_CICM(c,i,d,m), reachableCI(c,i), kcfaSenSpecIM(i,m), DI(c,i), kcfaDIC(c,i,d).
r_kcfaSenSpecIM(i,m) :- r_CICM(c,i,d,m), reachableCI(c,i), kcfaSenSpecIM(i,m), DI(c,i), kcfaDIC(c,i,d).
r_DI(c,i) :- r_CICM(c,i,d,m), reachableCI(c,i), kcfaSenSpecIM(i,m), DI(c,i), kcfaDIC(c,i,d).
r_kcfaDIC(c,i,d) :- r_CICM(c,i,d,m), reachableCI(c,i), kcfaSenSpecIM(i,m), DI(c,i), kcfaDIC(c,i,d).

### CICM(c,i,0,m) :- reachableCI(c,i), ctxtInsStatIM(i,m).
r_reachableCI(c,i) :- r_CICM(c,i,0,m), reachableCI(c,i), ctxtInsStatIM(i,m).
r_ctxtInsStatIM(i,m) :- r_CICM(c,i,0,m), reachableCI(c,i), ctxtInsStatIM(i,m).

### CICM(c,i,d,m) :- reachableCI(c,i), kcfaSenStatIM(i,m), kcfaDIC(c,i,d).
r_reachableCI(c,i) :- r_CICM(c,i,d,m), reachableCI(c,i), kcfaSenStatIM(i,m), kcfaDIC(c,i,d).
r_kcfaSenStatIM(i,m) :- r_CICM(c,i,d,m), reachableCI(c,i), kcfaSenStatIM(i,m), kcfaDIC(c,i,d).
r_kcfaDIC(c,i,d) :- r_CICM(c,i,d,m), reachableCI(c,i), kcfaSenStatIM(i,m), kcfaDIC(c,i,d).

### DVDV(d,v,c,u) :- argCopy(i,u,m,v), CICM(c,i,d,m).
r_CICM(c,i,d,m) :- r_DVDV(d,v,c,u), argCopy(i,u,m,v), CICM(c,i,d,m).

### DVDV(c,u,d,v) :- retCopy(i,u,m,v), CICM(c,i,d,m).
r_CICM(c,i,d,m) :- r_DVDV(c,u,d,v), retCopy(i,u,m,v), CICM(c,i,d,m).

### DVC(c,u,o) :- DVDV(c,u,d,v), DVC(d,v,o), VCfilter(u,o).
r_DVDV(c,u,d,v) :- r_DVC(c,u,o), DVDV(c,u,d,v), DVC(d,v,o), VCfilter(u,o).
r_DVC(d,v,o) :- r_DVC(c,u,o), DVDV(c,u,d,v), DVC(d,v,o), VCfilter(u,o).

### RobjValAsgnInst(c,l,h) :- reachableCM(c,m), MobjValAsgnInst(m,l,h).
r_reachableCM(c,m) :- r_RobjValAsgnInst(c,l,h), reachableCM(c,m), MobjValAsgnInst(m,l,h).

### DVC(c,l,o) :- RobjValAsgnInst(c,l,h), CHC(c,h,o).
r_RobjValAsgnInst(c,l,h) :- r_DVC(c,l,o), RobjValAsgnInst(c,l,h), CHC(c,h,o).
r_CHC(c,h,o) :- r_DVC(c,l,o), RobjValAsgnInst(c,l,h), CHC(c,h,o).

### RobjVarAsgnInst(c,l,r) :- reachableCM(c,m), MobjVarAsgnInst(m,l,r).
r_reachableCM(c,m) :- r_RobjVarAsgnInst(c,l,r), reachableCM(c,m), MobjVarAsgnInst(m,l,r).

### DVC(c,l,c1) :- RobjVarAsgnInst(c,l,r), DVC(c,r,c1), VCfilter(l,c1).
r_RobjVarAsgnInst(c,l,r) :- r_DVC(c,l,c1), RobjVarAsgnInst(c,l,r), DVC(c,r,c1), VCfilter(l,c1).
r_DVC(c,r,c1) :- r_DVC(c,l,c1), RobjVarAsgnInst(c,l,r), DVC(c,r,c1), VCfilter(l,c1).

### RgetInstFldInst(c,l,b,f) :- reachableCM(c,m), MgetInstFldInst(m,l,b,f).
r_reachableCM(c,m) :- r_RgetInstFldInst(c,l,b,f), reachableCM(c,m), MgetInstFldInst(m,l,b,f).

### DVC(c,l,c2) :- RgetInstFldInst(c,l,b,f), DVC(c,b,c1), CFC(c1,f,c2).
r_RgetInstFldInst(c,l,b,f) :- r_DVC(c,l,c2), RgetInstFldInst(c,l,b,f), DVC(c,b,c1), CFC(c1,f,c2).
r_DVC(c,b,c1) :- r_DVC(c,l,c2), RgetInstFldInst(c,l,b,f), DVC(c,b,c1), CFC(c1,f,c2).
r_CFC(c1,f,c2) :- r_DVC(c,l,c2), RgetInstFldInst(c,l,b,f), DVC(c,b,c1), CFC(c1,f,c2).

### RgetStatFldInst(c,l,f) :- reachableCM(c,m), MgetStatFldInst(m,l,f).
r_reachableCM(c,m) :- r_RgetStatFldInst(c,l,f), reachableCM(c,m), MgetStatFldInst(m,l,f).

### DVC(c,l,o) :- RgetStatFldInst(c,l,f), FC(f,o).
r_RgetStatFldInst(c,l,f) :- r_DVC(c,l,o), RgetStatFldInst(c,l,f), FC(f,o).
r_FC(f,o) :- r_DVC(c,l,o), RgetStatFldInst(c,l,f), FC(f,o).

### RputInstFldInst(c,b,f,r) :- reachableCM(c,m), MputInstFldInst(m,b,f,r).
r_reachableCM(c,m) :- r_RputInstFldInst(c,b,f,r), reachableCM(c,m), MputInstFldInst(m,b,f,r).

### CFC(c1,f,c2) :- RputInstFldInst(c,b,f,r), DVC(c,b,c1), DVC(c,r,c2).
r_RputInstFldInst(c,b,f,r) :- r_CFC(c1,f,c2), RputInstFldInst(c,b,f,r), DVC(c,b,c1), DVC(c,r,c2).
r_DVC(c,b,c1) :- r_CFC(c1,f,c2), RputInstFldInst(c,b,f,r), DVC(c,b,c1), DVC(c,r,c2).
r_DVC(c,r,c2) :- r_CFC(c1,f,c2), RputInstFldInst(c,b,f,r), DVC(c,b,c1), DVC(c,r,c2).

### RputStatFldInst(c,f,r) :- reachableCM(c,m), MputStatFldInst(m,f,r).
r_reachableCM(c,m) :- r_RputStatFldInst(c,f,r), reachableCM(c,m), MputStatFldInst(m,f,r).

### FC(f,o) :- RputStatFldInst(c,f,r), DVC(c,r,o).
r_RputStatFldInst(c,f,r) :- r_FC(f,o), RputStatFldInst(c,f,r), DVC(c,r,o).
r_DVC(c,r,o) :- r_FC(f,o), RputStatFldInst(c,f,r), DVC(c,r,o).

### reachableCM(c,m) :- reachableCI(c,i), objNewInstIM(i,m).
r_reachableCI(c,i) :- r_reachableCM(c,m), reachableCI(c,i), objNewInstIM(i,m).

### reachableCM(c,m) :- reachableCI(c,i), conNewInstIM(i,m).
r_reachableCI(c,i) :- r_reachableCM(c,m), reachableCI(c,i), conNewInstIM(i,m).

### DVC(c,v,o) :- reachableCI(c,i), objNewInstIM(i,m), MmethArg(m,0,v), objNewInstIH(i,h), CHC(c,h,o).
r_reachableCI(c,i) :- r_DVC(c,v,o), reachableCI(c,i), objNewInstIM(i,m), MmethArg(m,0,v), objNewInstIH(i,h), CHC(c,h,o).
r_CHC(c,h,o) :- r_DVC(c,v,o), reachableCI(c,i), objNewInstIM(i,m), MmethArg(m,0,v), objNewInstIH(i,h), CHC(c,h,o).

### DVC(c,v,o) :- reachableCI(c,i), objNewInstIH(i,h), IinvkRet(i,0,v), CHC(c,h,o).
r_reachableCI(c,i) :- r_DVC(c,v,o), reachableCI(c,i), objNewInstIH(i,h), IinvkRet(i,0,v), CHC(c,h,o).
r_CHC(c,h,o) :- r_DVC(c,v,o), reachableCI(c,i), objNewInstIH(i,h), IinvkRet(i,0,v), CHC(c,h,o).

### DVC(c,v,o2) :- reachableCI(c,i), conNewInstIM(i,m), IinvkArg(i,1,u), MmethArg(m,1,v), DVC(c,u,o), CFC(o,0,o2).
r_reachableCI(c,i) :- r_DVC(c,v,o2), reachableCI(c,i), conNewInstIM(i,m), IinvkArg(i,1,u), MmethArg(m,1,v), DVC(c,u,o), CFC(o,0,o2).
r_DVC(c,u,o) :- r_DVC(c,v,o2), reachableCI(c,i), conNewInstIM(i,m), IinvkArg(i,1,u), MmethArg(m,1,v), DVC(c,u,o), CFC(o,0,o2).
r_CFC(o,0,o2) :- r_DVC(c,v,o2), reachableCI(c,i), conNewInstIM(i,m), IinvkArg(i,1,u), MmethArg(m,1,v), DVC(c,u,o), CFC(o,0,o2).

### DVC(c,v,o) :- reachableCI(c,i), conNewInstIM(i,m), MmethArg(m,0,v), conNewInstIH(i,h), CHC(c,h,o).
r_reachableCI(c,i) :- r_DVC(c,v,o), reachableCI(c,i), conNewInstIM(i,m), MmethArg(m,0,v), conNewInstIH(i,h), CHC(c,h,o).
r_CHC(c,h,o) :- r_DVC(c,v,o), reachableCI(c,i), conNewInstIM(i,m), MmethArg(m,0,v), conNewInstIH(i,h), CHC(c,h,o).

### DVC(c,v,o) :- reachableCI(c,i), conNewInstIH(i,h), IinvkRet(i,0,v), CHC(c,h,o).
r_reachableCI(c,i) :- r_DVC(c,v,o), reachableCI(c,i), conNewInstIH(i,h), IinvkRet(i,0,v), CHC(c,h,o).
r_CHC(c,h,o) :- r_DVC(c,v,o), reachableCI(c,i), conNewInstIH(i,h), IinvkRet(i,0,v), CHC(c,h,o).

### DVC(c,v,o) :- reachableCI(c,i), aryNewInstIH(i,h), IinvkRet(i,0,v), CHC(c,h,o).
r_reachableCI(c,i) :- r_DVC(c,v,o), reachableCI(c,i), aryNewInstIH(i,h), IinvkRet(i,0,v), CHC(c,h,o).
r_CHC(c,h,o) :- r_DVC(c,v,o), reachableCI(c,i), aryNewInstIH(i,h), IinvkRet(i,0,v), CHC(c,h,o).

### DVC(_,v,o) :- DVC(_,v,o), epsilonV(v).
r_DVC(x5,v,o) :- r_DVC(_,v,o), DVC(x5,v,o), epsilonV(v).

### reachableT(t) :- reachableCI(_,i), conNewInstIH(i,h), HT(h,t).
r_reachableCI(x6,i) :- r_reachableT(t), reachableCI(x6,i), conNewInstIH(i,h), HT(h,t).

### reachableT(t) :- reachableCI(_,i), objNewInstIH(i,h), HT(h,t).
r_reachableCI(x7,i) :- r_reachableT(t), reachableCI(x7,i), objNewInstIH(i,h), HT(h,t).

### reachableT(t) :- reachableCI(_,i), clsForNameIT(i,t).
r_reachableCI(x8,i) :- r_reachableT(t), reachableCI(x8,i), clsForNameIT(i,t).

### reachableT(t) :- reachableCM(_,m), MobjValAsgnInst(m,_,h), HT(h,t).
r_reachableCM(x9,m) :- r_reachableT(t), reachableCM(x9,m), MobjValAsgnInst(m,_,h), HT(h,t).

### reachableT(t) :- reachableCM(_,m), staticTM(t,m).
r_reachableCM(x11,m) :- r_reachableT(t), reachableCM(x11,m), staticTM(t,m).

### reachableT(t) :- reachableCM(_,m), MputStatFldInst(m,f,_), staticTF(t,f).
r_reachableCM(x12,m) :- r_reachableT(t), reachableCM(x12,m), MputStatFldInst(m,f,_), staticTF(t,f).

### reachableT(t) :- reachableCM(_,m), MgetStatFldInst(m,_,f), staticTF(t,f).
r_reachableCM(x14,m) :- r_reachableT(t), reachableCM(x14,m), MgetStatFldInst(m,_,f), staticTF(t,f).

### reachableT(t) :- classT(t), reachableT(s), sub(s,t).
r_reachableT(s) :- r_reachableT(t), classT(t), reachableT(s), sub(s,t).

### CVC(0,v,o) :- DVC(_,v,o), epsilonV(v).
r_DVC(x16,v,o) :- r_CVC(0,v,o), DVC(x16,v,o), epsilonV(v).

### CVC(c,v,o) :- DVC(c,v,o), !epsilonV(v).
r_DVC(c,v,o) :- r_CVC(c,v,o), DVC(c,v,o), !epsilonV(v).

### rootCM(0,m) :- reachableT(t), clinitTM(t,m).
r_reachableT(t) :- r_rootCM(0,m), reachableT(t), clinitTM(t,m).

### CMCM(c,m,d,n) :- CICM(c,i,d,n), MI(m,i).
r_CICM(c,i,d,n) :- r_CMCM(c,m,d,n), CICM(c,i,d,n), MI(m,i).
inQueryEE(e1:E,e2:E) input
ME(m:M0,e:E0) input
statF(f:F0) input
EF(e:E0,f:F0) input
EV(e:E0,v:V0) input
PE(p:P0,e:E0) input
PP(p:P0,q:P1) input
MPhead(m:M0,p:P0) input
MPtail(m:M0,p:P0) input
PI(p:P0,i:I0) input
threadDHM(t:D,h:H,m:M) input
threadDCM(t:D,c:C,m:M) input
r_threadDCM(t:D,c:C,m:M) output # track
thrSenAbbrRootCM(c:C0,m:M0) input
r_thrSenAbbrRootCM(c:C,m:M) output # track
thrSenAbbrReachableCM(c:C0,m:M0)  input
r_thrSenAbbrReachableCM(c:C,m:M) output # track
thrSenAbbrCICM(c:C0,i:I0,d:C1,m:M0)  input
r_thrSenAbbrCICM(c:C,i:I,d:C,m:M) output # track
reachableTCMZ(t:D0,c:C0,m:M0) input
r_reachableTCMZ(t:D,c:C,m:M) output # track
reachableTCE(t:D0,c:C0,e:E0) input
r_reachableTCE(t:D,c:C,e:E) output # track
startingRaceHext(t1:D0,c1:C0,e1:E0,t2:D1,c2:C1,e2:E1) input
r_startingRaceHext(t1:D,c1:C,e1:E,t2:D,c2:C,e2:E) output # track
statE(e:E0) input
r_statE(e:E) output # track
CEC(c:C0,e:E0,o:C1) input
r_CEC(c:C,e:E,o:C) output # track
escA(a:C) input
r_escA(a:C) output # track
escapingRaceHext(t1:D0,c1:C0,e1:E0,t2:D1,c2:C1,e2:E1) input
r_escapingRaceHext(t1:D,c1:C,e1:E,t2:D,c2:C,e2:E) output # track
threadDC(t:D,c:C) input
r_threadDC(t:D,c:C) output # track
ForkPMcs(caller:C,p1:P,callee:C)  input
r_ForkPMcs(caller:C,p1:P,callee:C) output # track
ForkPHcs(caller:C,p1:P,callee:C,p2:P)  input
r_ForkPHcs(caller:C,p1:P,callee:C,p2:P) output # track
NonForkPMcs(caller:C,p1:P,callee:C,m2:M) input
r_NonForkPMcs(caller:C,p1:P,callee:C,m2:M) output # track
NonForkPHcs(caller:C,p1:P,callee:C,p2:P) input
r_NonForkPHcs(caller:C,p1:P,callee:C,p2:P) output # track
NonForkPTcs(caller:C,p1:P,callee:C,p2:P) input
r_NonForkPTcs(caller:C,p1:P,callee:C,p2:P) output # track
PathEdgeZ(c:C,p:P,this:D,sThat:D,tThat:D) input
r_PathEdgeZ(c:C,p:P,this:D,sThat:D,tThat:D) output # track
SummEdgeZ(c:C,p:P,this:D,sThat:D,tThat:D) input
r_SummEdgeZ(c:C,p:P,this:D,sThat:D,tThat:D) output # track
mhpZ(c:C0,p:P0,t1:D0,t2:D1) input
r_mhpZ(c:C,p:P,t1:D,t2:D) output # track
mheZ(c:C0,e:E0,t1:D0,t2:D1) input
r_mheZ(c:C,e:E,t1:D,t2:D) output # track
parallelRaceHext(t1:D0,c1:C0,e1:E0,t2:D1,c2:C1,e2:E1) input
r_parallelRaceHext(t1:D,c1:C,e1:E,t2:D,c2:C,e2:E) output # track
outQueryEE(e1:E0,e2:E1) input
r_outQueryEE(e1:E,e2:E) output # track

### escA(a) :- FC(_,a).
r_FC(x17,a) :- r_escA(a), FC(x17,a).

### escA(a) :- reachableCM(c,1), MmethArg(1,0,v), CVC(c,v,a).
r_reachableCM(c,1) :- r_escA(a), reachableCM(c,1), MmethArg(1,0,v), CVC(c,v,a).
r_CVC(c,v,a) :- r_escA(a), reachableCM(c,1), MmethArg(1,0,v), CVC(c,v,a).

### escA(a) :- escA(b), CFC(b,_,a).
r_escA(b) :- r_escA(a), escA(b), CFC(b,_,a).
r_CFC(b,x18,a) :- r_escA(a), escA(b), CFC(b,x18,a).

### thrSenAbbrRootCM(d,1) :- thrSenAbbrReachableCM(c,m), MI(m,i), CICM(c,i,d,1).
r_thrSenAbbrReachableCM(c,m) :- r_thrSenAbbrRootCM(d,1), thrSenAbbrReachableCM(c,m), MI(m,i), CICM(c,i,d,1).
r_CICM(c,i,d,1) :- r_thrSenAbbrRootCM(d,1), thrSenAbbrReachableCM(c,m), MI(m,i), CICM(c,i,d,1).

### thrSenAbbrReachableCM(c,m) :- thrSenAbbrRootCM(c,m).
r_thrSenAbbrRootCM(c,m) :- r_thrSenAbbrReachableCM(c,m), thrSenAbbrRootCM(c,m).

### thrSenAbbrReachableCM(d,n) :- thrSenAbbrCICM(_,_,d,n).
r_thrSenAbbrCICM(x19,x20,d,n) :- r_thrSenAbbrReachableCM(d,n), thrSenAbbrCICM(x19,x20,d,n).

### thrSenAbbrCICM(c,i,d,n) :- thrSenAbbrReachableCM(c,m), MI(m,i), CICM(c,i,d,n), n!=1.
r_thrSenAbbrReachableCM(c,m) :- r_thrSenAbbrCICM(c,i,d,n), thrSenAbbrReachableCM(c,m), MI(m,i), CICM(c,i,d,n), n!=1.
r_CICM(c,i,d,n) :- r_thrSenAbbrCICM(c,i,d,n), thrSenAbbrReachableCM(c,m), MI(m,i), CICM(c,i,d,n), n!=1.

### threadDCM(b,c,1) :- threadDHM(b,h,1), reachableCM(c,1), MmethArg(1,0,v), CVC(c,v,o), CH(o,h).
r_reachableCM(c,1) :- r_threadDCM(b,c,1), threadDHM(b,h,1), reachableCM(c,1), MmethArg(1,0,v), CVC(c,v,o), CH(o,h).
r_CVC(c,v,o) :- r_threadDCM(b,c,1), threadDHM(b,h,1), reachableCM(c,1), MmethArg(1,0,v), CVC(c,v,o), CH(o,h).
r_CH(o,h) :- r_threadDCM(b,c,1), threadDHM(b,h,1), reachableCM(c,1), MmethArg(1,0,v), CVC(c,v,o), CH(o,h).

### reachableTCMZ(t,c,m) :- threadDCM(t,c,m).
r_threadDCM(t,c,m) :- r_reachableTCMZ(t,c,m), threadDCM(t,c,m).

### reachableTCMZ(t,d,n) :- reachableTCMZ(t,c,m), MI(m,i), thrSenAbbrCICM(c,i,d,n).
r_reachableTCMZ(t,c,m) :- r_reachableTCMZ(t,d,n), reachableTCMZ(t,c,m), MI(m,i), thrSenAbbrCICM(c,i,d,n).
r_thrSenAbbrCICM(c,i,d,n) :- r_reachableTCMZ(t,d,n), reachableTCMZ(t,c,m), MI(m,i), thrSenAbbrCICM(c,i,d,n).

### reachableTCE(t,c,e) :- reachableTCMZ(t,c,m), ME(m,e).
r_reachableTCMZ(t,c,m) :- r_reachableTCE(t,c,e), reachableTCMZ(t,c,m), ME(m,e).

### startingRaceHext(t1,c1,e1,t2,c2,e2) :- inQueryEE(e1,e2), reachableTCE(t1,c1,e1), reachableTCE(t2,c2,e2).
r_reachableTCE(t1,c1,e1) :- r_startingRaceHext(t1,c1,e1,t2,c2,e2), inQueryEE(e1,e2), reachableTCE(t1,c1,e1), reachableTCE(t2,c2,e2).
r_reachableTCE(t2,c2,e2) :- r_startingRaceHext(t1,c1,e1,t2,c2,e2), inQueryEE(e1,e2), reachableTCE(t1,c1,e1), reachableTCE(t2,c2,e2).

### startingRaceHext(t1,c1,e1,t2,c2,e2) :- inQueryEE(e1,e2), reachableTCE(t1,c1,e1), reachableTCE(t2,c2,e2), e1=e2, c1<c2.
r_reachableTCE(t1,c1,e1) :- r_startingRaceHext(t1,c1,e1,t2,c2,e2), inQueryEE(e1,e2), reachableTCE(t1,c1,e1), reachableTCE(t2,c2,e2), e1=e2, c1<c2.
r_reachableTCE(t2,c2,e2) :- r_startingRaceHext(t1,c1,e1,t2,c2,e2), inQueryEE(e1,e2), reachableTCE(t1,c1,e1), reachableTCE(t2,c2,e2), e1=e2, c1<c2.

### startingRaceHext(t1,c1,e1,t2,c2,e2) :- inQueryEE(e1,e2), reachableTCE(t1,c1,e1), reachableTCE(t2,c2,e2), e1=e2, c1=c2, t1<=t2.
r_reachableTCE(t1,c1,e1) :- r_startingRaceHext(t1,c1,e1,t2,c2,e2), inQueryEE(e1,e2), reachableTCE(t1,c1,e1), reachableTCE(t2,c2,e2), e1=e2, c1=c2, t1<=t2.
r_reachableTCE(t2,c2,e2) :- r_startingRaceHext(t1,c1,e1,t2,c2,e2), inQueryEE(e1,e2), reachableTCE(t1,c1,e1), reachableTCE(t2,c2,e2), e1=e2, c1=c2, t1<=t2.

### statE(e) :- EF(e,f), statF(f).

### CEC(c,e,o) :- EV(e,v), CVC(c,v,o), escA(o).
r_CVC(c,v,o) :- r_CEC(c,e,o), EV(e,v), CVC(c,v,o), escA(o).
r_escA(o) :- r_CEC(c,e,o), EV(e,v), CVC(c,v,o), escA(o).

### escapingRaceHext(t1,c1,e1,t2,c2,e2) :- startingRaceHext(t1,c1,e1,t2,c2,e2), CEC(c1,e1,o), CEC(c2,e2,o).
r_startingRaceHext(t1,c1,e1,t2,c2,e2) :- r_escapingRaceHext(t1,c1,e1,t2,c2,e2), startingRaceHext(t1,c1,e1,t2,c2,e2), CEC(c1,e1,o), CEC(c2,e2,o).
r_CEC(c1,e1,o) :- r_escapingRaceHext(t1,c1,e1,t2,c2,e2), startingRaceHext(t1,c1,e1,t2,c2,e2), CEC(c1,e1,o), CEC(c2,e2,o).
r_CEC(c2,e2,o) :- r_escapingRaceHext(t1,c1,e1,t2,c2,e2), startingRaceHext(t1,c1,e1,t2,c2,e2), CEC(c1,e1,o), CEC(c2,e2,o).

### escapingRaceHext(t1,c1,e1,t2,c2,e2) :- startingRaceHext(t1,c1,e1,t2,c2,e2), statE(e1), statE(e2).
r_startingRaceHext(t1,c1,e1,t2,c2,e2) :- r_escapingRaceHext(t1,c1,e1,t2,c2,e2), startingRaceHext(t1,c1,e1,t2,c2,e2), statE(e1), statE(e2).
r_statE(e1) :- r_escapingRaceHext(t1,c1,e1,t2,c2,e2), startingRaceHext(t1,c1,e1,t2,c2,e2), statE(e1), statE(e2).
r_statE(e2) :- r_escapingRaceHext(t1,c1,e1,t2,c2,e2), startingRaceHext(t1,c1,e1,t2,c2,e2), statE(e1), statE(e2).

### NonForkPMcs(c,p,d,m) :- CICM(c,i,d,m), m!=1, PI(p,i).
r_CICM(c,i,d,m) :- r_NonForkPMcs(c,p,d,m), CICM(c,i,d,m), m!=1, PI(p,i).

### NonForkPHcs(c,p,d,h) :- NonForkPMcs(c,p,d,m), MPhead(m,h).
r_NonForkPMcs(c,p,d,m) :- r_NonForkPHcs(c,p,d,h), NonForkPMcs(c,p,d,m), MPhead(m,h).

### NonForkPTcs(c,p,d,t) :- NonForkPMcs(c,p,d,m), MPtail(m,t).
r_NonForkPMcs(c,p,d,m) :- r_NonForkPTcs(c,p,d,t), NonForkPMcs(c,p,d,m), MPtail(m,t).

### ForkPMcs(c,p,d) :- CICM(c,i,d,1), PI(p,i).
r_CICM(c,i,d,1) :- r_ForkPMcs(c,p,d), CICM(c,i,d,1), PI(p,i).

### ForkPHcs(c,p,d,h) :- ForkPMcs(c,p,d), MPhead(1,h).
r_ForkPMcs(c,p,d) :- r_ForkPHcs(c,p,d,h), ForkPMcs(c,p,d), MPhead(1,h).

### threadDC(t,c) :- threadDCM(t,c,1).
r_threadDCM(t,c,1) :- r_threadDC(t,c), threadDCM(t,c,1).

### PathEdgeZ(c,q,t,t1,t2) :- PathEdgeZ(c,p,t,t1,t2), PP(p,q).
r_PathEdgeZ(c,p,t,t1,t2) :- r_PathEdgeZ(c,q,t,t1,t2), PathEdgeZ(c,p,t,t1,t2), PP(p,q).

### PathEdgeZ(d,q,t,t1,t2) :- NonForkPHcs(c,p,d,q), PathEdgeZ(c,p,t,_,t2), t1=t2.
r_NonForkPHcs(c,p,d,q) :- r_PathEdgeZ(d,q,t,t1,t2), NonForkPHcs(c,p,d,q), PathEdgeZ(c,p,t,_,t2), t1=t2.
r_PathEdgeZ(c,p,t,x21,t2) :- r_PathEdgeZ(d,q,t,t1,t2), NonForkPHcs(c,p,d,q), PathEdgeZ(c,p,t,x21,t2), t1=t2.

### SummEdgeZ(c,p,t,t1,t2) :- NonForkPTcs(c,p,d,q), PathEdgeZ(d,q,t,t1,t2).
r_NonForkPTcs(c,p,d,q) :- r_SummEdgeZ(c,p,t,t1,t2), NonForkPTcs(c,p,d,q), PathEdgeZ(d,q,t,t1,t2).
r_PathEdgeZ(d,q,t,t1,t2) :- r_SummEdgeZ(c,p,t,t1,t2), NonForkPTcs(c,p,d,q), PathEdgeZ(d,q,t,t1,t2).

### PathEdgeZ(c,r,t,t1,t3) :- SummEdgeZ(c,p,t,t2,t3), PathEdgeZ(c,p,t,t1,t2), PP(p,r).
r_SummEdgeZ(c,p,t,t2,t3) :- r_PathEdgeZ(c,r,t,t1,t3), SummEdgeZ(c,p,t,t2,t3), PathEdgeZ(c,p,t,t1,t2), PP(p,r).
r_PathEdgeZ(c,p,t,t1,t2) :- r_PathEdgeZ(c,r,t,t1,t3), SummEdgeZ(c,p,t,t2,t3), PathEdgeZ(c,p,t,t1,t2), PP(p,r).

### PathEdgeZ(c,r,t,t1,t2) :- ForkPMcs(c,p,d), PathEdgeZ(c,p,t,t1,_), PP(p,r), threadDC(t2,d).
r_ForkPMcs(c,p,d) :- r_PathEdgeZ(c,r,t,t1,t2), ForkPMcs(c,p,d), PathEdgeZ(c,p,t,t1,_), PP(p,r), threadDC(t2,d).
r_PathEdgeZ(c,p,t,t1,x22) :- r_PathEdgeZ(c,r,t,t1,t2), ForkPMcs(c,p,d), PathEdgeZ(c,p,t,t1,x22), PP(p,r), threadDC(t2,d).
r_threadDC(t2,d) :- r_PathEdgeZ(c,r,t,t1,t2), ForkPMcs(c,p,d), PathEdgeZ(c,p,t,t1,_), PP(p,r), threadDC(t2,d).

### PathEdgeZ(c,r,t,t1,t3) :- ForkPMcs(c,p,d), PathEdgeZ(c,p,t,t1,_), PP(p,r), threadDC(t2,d), PathEdgeZ(d,q,t2,0,t3), MPtail(1,q).
r_ForkPMcs(c,p,d) :- r_PathEdgeZ(c,r,t,t1,t3), ForkPMcs(c,p,d), PathEdgeZ(c,p,t,t1,_), PP(p,r), threadDC(t2,d), PathEdgeZ(d,q,t2,0,t3), MPtail(1,q).
r_PathEdgeZ(c,p,t,t1,x23) :- r_PathEdgeZ(c,r,t,t1,t3), ForkPMcs(c,p,d), PathEdgeZ(c,p,t,t1,x23), PP(p,r), threadDC(t2,d), PathEdgeZ(d,q,t2,0,t3), MPtail(1,q).
r_threadDC(t2,d) :- r_PathEdgeZ(c,r,t,t1,t3), ForkPMcs(c,p,d), PathEdgeZ(c,p,t,t1,_), PP(p,r), threadDC(t2,d), PathEdgeZ(d,q,t2,0,t3), MPtail(1,q).
r_PathEdgeZ(d,q,t2,0,t3) :- r_PathEdgeZ(c,r,t,t1,t3), ForkPMcs(c,p,d), PathEdgeZ(c,p,t,t1,_), PP(p,r), threadDC(t2,d), PathEdgeZ(d,q,t2,0,t3), MPtail(1,q).

### PathEdgeZ(d,h,x,y,z) :- ForkPHcs(c,p,d,h), PathEdgeZ(c,p,y,_,_), threadDC(x,d), z=y.
r_ForkPHcs(c,p,d,h) :- r_PathEdgeZ(d,h,x,y,z), ForkPHcs(c,p,d,h), PathEdgeZ(c,p,y,_,_), threadDC(x,d), z=y.
r_PathEdgeZ(c,p,y,x24,x25) :- r_PathEdgeZ(d,h,x,y,z), ForkPHcs(c,p,d,h), PathEdgeZ(c,p,y,x24,x25), threadDC(x,d), z=y.
r_threadDC(x,d) :- r_PathEdgeZ(d,h,x,y,z), ForkPHcs(c,p,d,h), PathEdgeZ(c,p,y,_,_), threadDC(x,d), z=y.

### PathEdgeZ(d,h,x,y,z) :- ForkPHcs(c,p,d,h), PathEdgeZ(c,p,_,_,y), threadDC(x,d), z=y.
r_ForkPHcs(c,p,d,h) :- r_PathEdgeZ(d,h,x,y,z), ForkPHcs(c,p,d,h), PathEdgeZ(c,p,_,_,y), threadDC(x,d), z=y.
r_PathEdgeZ(c,p,x26,x27,y) :- r_PathEdgeZ(d,h,x,y,z), ForkPHcs(c,p,d,h), PathEdgeZ(c,p,x26,x27,y), threadDC(x,d), z=y.
r_threadDC(x,d) :- r_PathEdgeZ(d,h,x,y,z), ForkPHcs(c,p,d,h), PathEdgeZ(c,p,_,_,y), threadDC(x,d), z=y.

### PathEdgeZ(e,h,x,y,z) :- ForkPHcs(c,p,d,h), PathEdgeZ(c,p,_,_,x), threadDC(x,e), threadDC(y,d), z=y.
r_ForkPHcs(c,p,d,h) :- r_PathEdgeZ(e,h,x,y,z), ForkPHcs(c,p,d,h), PathEdgeZ(c,p,_,_,x), threadDC(x,e), threadDC(y,d), z=y.
r_PathEdgeZ(c,p,x28,x29,x) :- r_PathEdgeZ(e,h,x,y,z), ForkPHcs(c,p,d,h), PathEdgeZ(c,p,x28,x29,x), threadDC(x,e), threadDC(y,d), z=y.
r_threadDC(x,e) :- r_PathEdgeZ(e,h,x,y,z), ForkPHcs(c,p,d,h), PathEdgeZ(c,p,_,_,x), threadDC(x,e), threadDC(y,d), z=y.
r_threadDC(y,d) :- r_PathEdgeZ(e,h,x,y,z), ForkPHcs(c,p,d,h), PathEdgeZ(c,p,_,_,x), threadDC(x,e), threadDC(y,d), z=y.

### mhpZ(c,p,t1,t2) :- PathEdgeZ(c,p,t1,_,t2), t1!=0, t2!=0.
r_PathEdgeZ(c,p,t1,x30,t2) :- r_mhpZ(c,p,t1,t2), PathEdgeZ(c,p,t1,x30,t2), t1!=0, t2!=0.

### mheZ(c,e,t1,t2) :- mhpZ(c,p,t1,t2), PE(p,e).
r_mhpZ(c,p,t1,t2) :- r_mheZ(c,e,t1,t2), mhpZ(c,p,t1,t2), PE(p,e).

### parallelRaceHext(t1,c1,e1,t2,c2,e2) :- escapingRaceHext(t1,c1,e1,t2,c2,e2), mheZ(c1,e1,t1,t2), mheZ(c2,e2,t2,t1).
r_escapingRaceHext(t1,c1,e1,t2,c2,e2) :- r_parallelRaceHext(t1,c1,e1,t2,c2,e2), escapingRaceHext(t1,c1,e1,t2,c2,e2), mheZ(c1,e1,t1,t2), mheZ(c2,e2,t2,t1).
r_mheZ(c1,e1,t1,t2) :- r_parallelRaceHext(t1,c1,e1,t2,c2,e2), escapingRaceHext(t1,c1,e1,t2,c2,e2), mheZ(c1,e1,t1,t2), mheZ(c2,e2,t2,t1).
r_mheZ(c2,e2,t2,t1) :- r_parallelRaceHext(t1,c1,e1,t2,c2,e2), escapingRaceHext(t1,c1,e1,t2,c2,e2), mheZ(c1,e1,t1,t2), mheZ(c2,e2,t2,t1).

### outQueryEE(e1,e2) :- parallelRaceHext(_,_,e1,_,_,e2).
r_parallelRaceHext(x31,x32,e1,x33,x34,e2) :- r_outQueryEE(e1,e2), parallelRaceHext(x31,x32,e1,x33,x34,e2).

### Base case
r_outQueryEE(e1:E,e2:E) :- outQueryEE(e1:E,e2:E).
