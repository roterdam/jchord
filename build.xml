<?xml version="1.0" encoding="UTF-8"?>
<project name="chord" default="help">
  <property name="chord.home.dir" location="."/>

  <target name="ant-contrib">
    <taskdef resource="net/sf/antcontrib/antlib.xml" classpath="lib/ant-contrib.jar"/>
  </target>

  <target name="bddbddb-class-path">
    <path id="bddbddb_class_path">
      <fileset dir="lib/bddbddb" includes="*.jar"/>
      <pathelement location="lib/jwutil.jar"/>
    </path>
    <property name="chord.bddbddb.class.path" refid="bddbddb_class_path"/>
  </target>

  <target name="bdd-lib-dir">
    <property name="chord.bdd.lib.dir" location="lib"/>
  </target>

  <target name="compile-props">
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.5"/>
    <property name="source" value="1.5"/>
  </target>

  <!-- Target props-file does following things in order:
   1. Sets chord.work.dir to current directory if it is not already set
   2. Loads properties from file {chord.work.dir}/chord.properties, if the file exists;
      Each relative path element in the value of any property named chord.*.path in the
      file is converted to an absolute path element w.r.t. {chord.work.dir}
   3. Sets chord.out.dir to {chord.work.dir}/chord_output, if it is not already set
  -->
  <target name="props-file" depends="ant-contrib">
    <if>
      <isset property="chord.work.dir"/>
      <then/>
      <else>
        <property name="chord.work.dir" location="."/>
        <echo message="WARNING: Property chord.work.dir not set; setting it to: ${chord.work.dir}"/>
      </else>
    </if>
    <property name="chord.props.file" location="${chord.work.dir}/chord.properties"/>
    <if>
      <available file="${chord.props.file}"/>
      <then>
        <property file="${chord.props.file}"/>
        <propertyselector property="chord.path.prop.list" delimiter="," match="chord\..*\.path"/>
        <antfetch antfile="${basedir}/pathconvert.xml" dir="${chord.work.dir}"
          target="pathconvert" inheritAll="false" return="${chord.path.prop.list}"/>
      </then>
      <else/>
    </if>
    <property name="chord.out.dir" location="${chord.work.dir}/chord_output/"/>
  </target>

  <target name="util-class-path">
    <path id="util_class_path">
      <pathelement location="classes/util"/>
      <pathelement location="lib/trove-2.0.4.jar"/>
      <pathelement location="lib/scannotation-1.0.2.jar"/>
    </path>
    <property name="chord.util.class.path" refid="util_class_path"/>
  </target>

  <target name="main-class-path" depends="util-class-path,bddbddb-class-path">
    <path id="main_class_path">
      <pathelement location="classes/main"/>
      <pathelement path="${chord.bddbddb.class.path}"/>
      <pathelement path="${chord.util.class.path}"/>
      <pathelement location="lib/joeq.jar"/>
      <pathelement location="lib/javassist.jar"/>
      <pathelement location="lib/j2h.jar"/>
      <pathelement location="lib/saxon9.jar"/>
    </path>
    <property name="chord.main.class.path" refid="main_class_path"/>
  </target>

  <target name="help">
  <echo>
  compile      Compile Chord source code
  run          Run Chord
               Optional properties:
               - chord.work.dir
                 working dir while running Chord; default=ant basedir
               - chord.out.dir
                 dir to dump Chord's output files; default={chord.work.dir}/chord_output
               - chord.main.class
                 fully-qualified name of main class of program to be analyzed
               - chord.class.path
                 classpath of program to be analyzed; need not include system classpath
               - chord.src.path
                 path containing Java surce files of program to be analyzed
               - chord.out.file
                 file to which stdout is redirected; default={chord.out.dir/log.txt
               - chord.err.file
                 file to which stderr is redirected; default={chord.out.dir/log.txt
               - chord.analyses
                 comma-separated list of names of analyses to be run on program
               - chord.scope.kind
                 specifies how to compute program scope; values=[rta|dynamic]; default=rta
               - chord.reuse.scope
                 specifies whether to reuse scope; values=[true|false]; default=false
  run-XXX      Run custom analysis XXX (e.g. datarace, deadlock, etc.)
  j2h_xref     Convert .java files to .html with cross-references
               Required properties:
               - java.dir (dir containing Java source files)
               - html.dir (dir to dump generated HTML files)
  j2h_fast     Convert .java files to .html without cross-references
               Required properties:
               - java.dir
               - html.dir
  solve        Run bddbddb (BDD-based Datalog solver)
               Required properties:
               - work.dir   (dir containing input/output BDD files)
               - dlog.file  (file containing Datalog program)
               Optional properties:
               - max.tuples (default=1000)
               - max.heap   (default=1024m)
               - noisy      ([yes|no]; default=yes)
  debug        Run bddbddb's interactive interpreter
               Required properties:
               - work.dir   (dir containing input/output BDD files)
               - dlog.file  (file containing Datalog program)
               Optional properties:
               - max.tuples (default=1000)
               - max.heap   (default=1024m)
  javadoc      Generate javadoc for Chord source code
  clean        Cleanup all generated class files
  cleandoc     Cleanup all generated javadoc files
  </echo>
  </target>

  <target name="compile" depends="compile-props,main-class-path,ant-contrib">
  <property environment="env"/>
	<mkdir dir="classes/util"/>
    <javac debug="true" debuglevel="${debuglevel}" source="${source}" target="${target}"
      srcdir="src/util/java" destdir="classes/util" classpath="${chord.util.class.path}"/>
	<mkdir dir="classes/main"/>
    <javac debug="true" debuglevel="${debuglevel}" source="${source}" target="${target}"
      srcdir="src/main/java" destdir="classes/main" classpath="${chord.main.class.path}"/>
	<mkdir dir="classes/datarace"/>
    <javac debug="true" debuglevel="${debuglevel}" source="${source}" target="${target}"
        srcdir="src/datarace/java" destdir="classes/datarace">
      <classpath>
        <pathelement location="classes/datarace"/>
        <pathelement path="${chord.main.class.path}"/>
      </classpath>
    </javac>
	<mkdir dir="classes/deadlock"/>
    <javac debug="true" debuglevel="${debuglevel}" source="${source}" target="${target}"
        srcdir="src/deadlock/java" destdir="classes/deadlock">
      <classpath>
        <pathelement location="classes/deadlock"/>
        <pathelement path="${chord.main.class.path}"/>
      </classpath>
    </javac>
	<mkdir dir="classes/downcast"/>
    <javac debug="true" debuglevel="${debuglevel}" source="${source}" target="${target}"
        srcdir="src/downcast/java" destdir="classes/downcast">
      <classpath>
        <pathelement location="classes/downcast"/>
        <pathelement path="${chord.main.class.path}"/>
      </classpath>
    </javac>
	<mkdir dir="classes/monosite"/>
    <javac debug="true" debuglevel="${debuglevel}" source="${source}" target="${target}"
        srcdir="src/monosite/java" destdir="classes/monosite">
      <classpath>
        <pathelement location="classes/monosite"/>
        <pathelement path="${chord.main.class.path}"/>
      </classpath>
    </javac>
    <if>
      <equals arg1="${sun.arch.data.model}" arg2="32"/>
      <then><property name="m32" value="-m32"/></then>
      <else><property name="m32" value=""/></else>
    </if>
    <exec executable="make" dir="bdd">
      <arg value="JDK_ROOT=${java.home}/.."/>
      <arg value="M32_FLAG=${m32}"/>
    </exec>
    <exec executable="make" dir="agent">
      <arg value="JDK_ROOT=${java.home}/.."/>
      <arg value="M32_FLAG=${m32}"/>
    </exec>
  </target>

  <target name="run" depends="main-class-path,bdd-lib-dir,props-file">
    <mkdir dir="${chord.out.dir}"/>
    <property name="chord.java.analysis.path" location="classes/main"/>
    <property name="chord.dlog.analysis.path" location="src/main/dlog"/>
    <property name="chord.max.heap" value="1024m"/>
    <property name="chord.max.stack" value="32m"/>
    <property name="chord.bddbddb.max.heap" value="1024m"/>
    <property name="chord.bddbddb.work.dir" location="${chord.out.dir}"/>
    <property name="chord.bddbddb.noisy" value="no"/>
    <if>
      <os family="unix"/>
      <then>
        <property name="chord.instr.agent.file" location="lib/libchord_instr_agent.so"/>
      </then>
      <elseif>
        <os family="windows"/>
        <then>
          <property name="chord.instr.agent.file" location="lib/chord_instr_agent.dll"/>
        </then>
      </elseif>
      <elseif>
        <os family="mac"/>
        <then>
          <property name="chord.instr.agent.file" location="lib/libchord_instr_agent.jnilib"/>
        </then>
      </elseif>
    </if>
    <java classname="chord.project.Project"
      	fork="true" failonerror="true" dir="${chord.work.dir}">
    <jvmarg value="-showversion"/>
    <jvmarg value="-ea"/> 
    <jvmarg value="-Xmx${chord.max.heap}"/>
    <jvmarg value="-Xss${chord.max.stack}"/>
    <!-- jvmarg value="-agentlib:hprof=cpu=times,interval=5"/-->
    <syspropertyset>
        <propertyref builtin="all"/>
    </syspropertyset>
    <classpath>
        <pathelement path="${chord.main.class.path}"/>
        <pathelement path="${chord.java.analysis.path}"/>
        <pathelement path="${chord.class.path}"/>
    </classpath>
    </java>
  </target>

  <target name="run-datarace">
    <path id="chord_java_analysis_path">
      <pathelement location="classes/main"/>
      <pathelement location="classes/datarace"/>
    </path>
    <path id="chord_dlog_analysis_path">
      <pathelement location="src/main/dlog"/>
      <pathelement location="src/datarace/dlog"/>
    </path>
    <property name="chord.analyses" value="datarace-java"/>
    <property name="chord.java.analysis.path" refid="chord_java_analysis_path"/>
    <property name="chord.dlog.analysis.path" refid="chord_dlog_analysis_path"/>
    <antcall target="run"/>
  </target>

  <target name="run-deadlock">
    <path id="chord_java_analysis_path">
      <pathelement location="classes/masin"/>
      <pathelement location="classes/deadlock"/>
    </path>
    <path id="chord_dlog_analysis_path">
      <pathelement location="src/main/dlog"/>
      <pathelement location="src/deadlock/dlog"/>
    </path>
    <property name="chord.analyses" value="deadlock-java"/>
    <property name="chord.java.analysis.path" refid="chord_java_analysis_path"/>
    <property name="chord.dlog.analysis.path" refid="chord_dlog_analysis_path"/>
    <antcall target="run"/>
  </target>

  <target name="run-downcast">
    <path id="chord_java_analysis_path">
      <pathelement location="classes/main"/>
      <pathelement location="classes/downcast"/>
    </path>
    <path id="chord_dlog_analysis_path">
      <pathelement location="src/main/dlog"/>
      <pathelement location="src/downcast/dlog"/>
    </path>
    <property name="chord.analyses" value="downcast-java"/>
    <property name="chord.java.analysis.path" refid="chord_java_analysis_path"/>
    <property name="chord.dlog.analysis.path" refid="chord_dlog_analysis_path"/>
    <antcall target="run"/>
  </target>

  <target name="run-monosite">
    <path id="chord_java_analysis_path">
      <pathelement location="classes/main"/>
      <pathelement location="classes/monosite"/>
    </path>
    <path id="chord_dlog_analysis_path">
      <pathelement location="src/main/dlog"/>
      <pathelement location="src/monosite/dlog"/>
    </path>
    <property name="chord.analyses" value="monosite-java"/>
    <property name="chord.java.analysis.path" refid="chord_java_analysis_path"/>
    <property name="chord.dlog.analysis.path" refid="chord_dlog_analysis_path"/>
    <antcall target="run"/>
  </target>

  <target name="clean">
    <delete dir="classes"/>
    <exec executable="make" dir="bdd">
        <arg value="clean"/>
    </exec>
    <exec executable="make" dir="agent">
        <arg value="clean"/>
    </exec>
  </target>

  <target name="cleandoc">
    <delete dir="javadoc"/>
  </target>

  <!-- JAVA TO HTML UTILS -->

  <target name="j2h_xref">
    <fail unless="java.dir"/>
    <fail unless="html.dir"/>
    <java classname="j2h" fork="true" failonerror="true">
      <arg value="-js"/>
      <arg file="${java.dir}"/>
      <arg value="-d"/>
      <arg file="${html.dir}"/>
      <arg value="-m"/>
      <arg value="4"/>
      <arg value="-t"/>
      <arg value="4"/>
      <classpath>
        <pathelement location="lib/j2h.jar"/>
      </classpath>
    </java>
  </target>
  
  <target name="j2h_fast">
    <fail unless="java.dir"/>
    <fail unless="html.dir"/>
    <taskdef name="java2html" classname="de.java2html.anttasks.Java2HtmlTask">
      <classpath>
        <pathelement location="lib/java2html.jar"/>
      </classpath>
    </taskdef>
    <java2html
      srcdir="${java.dir}"
      destdir="${html.dir}"
      includes="**/*.java"
      style="eclipse"
      showLineNumbers="true"
      addLineAnchors="true"
      tabs="4"/>
  </target>

  <!-- BDDBDDB UTILS -->

  <target name="solve" depends="bddbddb-class-path,bdd-lib-dir">
    <fail unless="work.dir"/>
    <fail unless="dlog.file"/>
    <property name="max.tuples" value="1000"/>
    <property name="max.heap" value="1024m"/>
    <property name="noisy" value="yes"/>
    <java classname="net.sf.bddbddb.Solver"
        fork="true" failonerror="true" maxmemory="${max.heap}"
        classpath="${chord.bddbddb.class.path}">
      <sysproperty key="java.library.path" file="${chord.bdd.lib.dir}"/>
      <sysproperty key="basedir" file="${work.dir}"/>
      <sysproperty key="maxtuples" value="${max.tuples}"/>
      <sysproperty key="noisy" value="${noisy}"/>
      <arg file="${dlog.file}"/>
    </java>
  </target>

  <target name="debug" depends="bddbddb-class-path,bdd-lib-dir">
    <fail unless="work.dir"/>
    <fail unless="dlog.file"/>
    <property name="max.tuples" value="1000"/>
    <property name="max.heap" value="1024m"/>
    <java classname="net.sf.bddbddb.Interactive"
        fork="true" failonerror="true" maxmemory="${max.heap}"
        classpath="${chord.bddbddb.class.path}">
      <sysproperty key="java.library.path" file="${chord.bdd.lib.dir}"/>
      <sysproperty key="basedir" file="${work.dir}"/>
      <sysproperty key="maxtuples" value="${max.tuples}"/>
      <arg file="${dlog.file}"/>
    </java>
  </target>
  <target name="javadoc">
    <javadoc destdir="javadoc">
      <fileset dir="src">
        <include name="**/*.java"/>
      </fileset>
      <classpath>
        <pathelement location="lib/joeq.jar"/>
        <pathelement location="lib/trove-2.0.4.jar"/>
        <pathelement location="lib/bddbddb/javabdd-1.0b2.jar"/>
        <pathelement location="lib/javassist.jar"/>
        <pathelement location="lib/scannotation-1.0.2.jar"/>
        <pathelement location="lib/j2h.jar"/>
      </classpath>
    </javadoc>
  </target>
</project>
